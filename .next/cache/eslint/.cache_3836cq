[{"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\aksesMenu.js":"1","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\bannerHome.js":"2","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\config.js":"3","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\gambarProduk.js":"4","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\kategori.js":"5","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\login.js":"6","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\menu.js":"7","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\produk.js":"8","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\profileCompany.js":"9","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\roleUser.js":"10","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\size.js":"11","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\subKategori.js":"12","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\user.js":"13","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\bannerHome\\page.js":"14","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\kategori\\create\\page.js":"15","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\kategori\\edit\\[id]\\page.js":"16","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\kategori\\page.js":"17","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\layout.tsx":"18","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\page.tsx":"19","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\produk\\create\\page.js":"20","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\produk\\detail\\[id]\\page.js":"21","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\produk\\page.js":"22","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\profileCompany\\page.js":"23","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\roleUser\\create\\page.js":"24","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\roleUser\\edit\\[id]\\page.js":"25","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\roleUser\\page.js":"26","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\subKategori\\create\\page.js":"27","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\subKategori\\edit\\[id]\\page.js":"28","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\subKategori\\page.js":"29","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\user\\create\\page.js":"30","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\user\\edit\\[id]\\page.js":"31","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\user\\page.js":"32","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\login\\layout.js":"33","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\login\\page.js":"34","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\buttonAllert.js":"35","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\buttonEdit.js":"36","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\buttonPrimary.js":"37","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\Carousel.js":"38","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\checkBox.js":"39","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldNumber.js":"40","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldPassword.js":"41","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldRupiah.js":"42","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldTanggal.js":"43","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldText.js":"44","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldTextArea.js":"45","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fileInput.js":"46","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\formDetailProduk.js":"47","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\formEditProduk.js":"48","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\galery.js":"49","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\labelData.js":"50","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\modalCreateRoleUser.js":"51","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\modalEditRoleUser.js":"52","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\modalEditsize.js":"53","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\multiplePicForm.js":"54","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\navbar.js":"55","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\pagination.js":"56","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\searchForm.js":"57","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\select2Kategori.js":"58","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\select2RoleUser.js":"59","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\select2SubKategori.js":"60","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\selectRow.js":"61","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\sizeForm.js":"62","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\sizeFormEdit.js":"63","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\spinner.js":"64","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableKategori.js":"65","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableProduk.js":"66","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableRoleUser.js":"67","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableSubKategori.js":"68","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableUser.js":"69","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\titlePage.js":"70","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\togle.js":"71","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\layout.js":"72","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\page.js":"73"},{"size":702,"mtime":1695913825516,"results":"74","hashOfConfig":"75"},{"size":2517,"mtime":1695913827161,"results":"76","hashOfConfig":"75"},{"size":255,"mtime":1691508616641,"results":"77","hashOfConfig":"75"},{"size":2587,"mtime":1698568691761,"results":"78","hashOfConfig":"75"},{"size":6687,"mtime":1695913869724,"results":"79","hashOfConfig":"75"},{"size":581,"mtime":1692085933871,"results":"80","hashOfConfig":"75"},{"size":533,"mtime":1695913931584,"results":"81","hashOfConfig":"75"},{"size":7839,"mtime":1698777822739,"results":"82","hashOfConfig":"75"},{"size":2328,"mtime":1698856364076,"results":"83","hashOfConfig":"75"},{"size":5299,"mtime":1695913929535,"results":"84","hashOfConfig":"75"},{"size":4044,"mtime":1698568677611,"results":"85","hashOfConfig":"75"},{"size":7323,"mtime":1695913974543,"results":"86","hashOfConfig":"75"},{"size":5653,"mtime":1697885004548,"results":"87","hashOfConfig":"75"},{"size":6708,"mtime":1695913483193,"results":"88","hashOfConfig":"75"},{"size":3986,"mtime":1694601017278,"results":"89","hashOfConfig":"75"},{"size":4309,"mtime":1694605572921,"results":"90","hashOfConfig":"75"},{"size":2570,"mtime":1694675588393,"results":"91","hashOfConfig":"75"},{"size":478,"mtime":1692623318456,"results":"92","hashOfConfig":"75"},{"size":7388,"mtime":1692453201033,"results":"93","hashOfConfig":"75"},{"size":18514,"mtime":1698185048945,"results":"94","hashOfConfig":"75"},{"size":6423,"mtime":1698768980187,"results":"95","hashOfConfig":"75"},{"size":2443,"mtime":1697884819904,"results":"96","hashOfConfig":"75"},{"size":6825,"mtime":1698859604665,"results":"97","hashOfConfig":"75"},{"size":15608,"mtime":1694590771179,"results":"98","hashOfConfig":"75"},{"size":17247,"mtime":1698052020337,"results":"99","hashOfConfig":"75"},{"size":2518,"mtime":1692882950996,"results":"100","hashOfConfig":"75"},{"size":4774,"mtime":1697362518394,"results":"101","hashOfConfig":"75"},{"size":5153,"mtime":1694769576429,"results":"102","hashOfConfig":"75"},{"size":2577,"mtime":1694679530234,"results":"103","hashOfConfig":"75"},{"size":7193,"mtime":1693224920163,"results":"104","hashOfConfig":"75"},{"size":8385,"mtime":1692891285965,"results":"105","hashOfConfig":"75"},{"size":2548,"mtime":1692883122438,"results":"106","hashOfConfig":"75"},{"size":230,"mtime":1698859952642,"results":"107","hashOfConfig":"75"},{"size":3529,"mtime":1698859922221,"results":"108","hashOfConfig":"75"},{"size":940,"mtime":1691469396877,"results":"109","hashOfConfig":"75"},{"size":765,"mtime":1692450509102,"results":"110","hashOfConfig":"75"},{"size":1090,"mtime":1698413389714,"results":"111","hashOfConfig":"75"},{"size":1790,"mtime":1695911445256,"results":"112","hashOfConfig":"75"},{"size":645,"mtime":1692889306210,"results":"113","hashOfConfig":"75"},{"size":1819,"mtime":1697362518395,"results":"114","hashOfConfig":"75"},{"size":2539,"mtime":1692619513423,"results":"115","hashOfConfig":"75"},{"size":2438,"mtime":1697385528715,"results":"116","hashOfConfig":"75"},{"size":2042,"mtime":1697393222247,"results":"117","hashOfConfig":"75"},{"size":1466,"mtime":1692619533725,"results":"118","hashOfConfig":"75"},{"size":1500,"mtime":1697362518396,"results":"119","hashOfConfig":"75"},{"size":2284,"mtime":1695905721108,"results":"120","hashOfConfig":"75"},{"size":3638,"mtime":1698410865677,"results":"121","hashOfConfig":"75"},{"size":21156,"mtime":1698778351342,"results":"122","hashOfConfig":"75"},{"size":691,"mtime":1695912942765,"results":"123","hashOfConfig":"75"},{"size":353,"mtime":1698182050921,"results":"124","hashOfConfig":"75"},{"size":0,"mtime":1692681113203,"results":"125","hashOfConfig":"75"},{"size":0,"mtime":1692681122430,"results":"126","hashOfConfig":"75"},{"size":3397,"mtime":1698769377358,"results":"127","hashOfConfig":"75"},{"size":1823,"mtime":1697362518397,"results":"128","hashOfConfig":"75"},{"size":3462,"mtime":1695905721109,"results":"129","hashOfConfig":"75"},{"size":4287,"mtime":1694678670737,"results":"130","hashOfConfig":"75"},{"size":2995,"mtime":1692682778592,"results":"131","hashOfConfig":"75"},{"size":2241,"mtime":1697385433599,"results":"132","hashOfConfig":"75"},{"size":2099,"mtime":1692521063756,"results":"133","hashOfConfig":"75"},{"size":2294,"mtime":1697385435242,"results":"134","hashOfConfig":"75"},{"size":1212,"mtime":1692531537515,"results":"135","hashOfConfig":"75"},{"size":2347,"mtime":1698859271793,"results":"136","hashOfConfig":"75"},{"size":6060,"mtime":1698769781709,"results":"137","hashOfConfig":"75"},{"size":1437,"mtime":1691510911096,"results":"138","hashOfConfig":"75"},{"size":10132,"mtime":1695912854811,"results":"139","hashOfConfig":"75"},{"size":12605,"mtime":1698771968621,"results":"140","hashOfConfig":"75"},{"size":8402,"mtime":1694601615980,"results":"141","hashOfConfig":"75"},{"size":10151,"mtime":1694769202108,"results":"142","hashOfConfig":"75"},{"size":10175,"mtime":1694601593739,"results":"143","hashOfConfig":"75"},{"size":202,"mtime":1692453162458,"results":"144","hashOfConfig":"75"},{"size":1433,"mtime":1692890037152,"results":"145","hashOfConfig":"75"},{"size":478,"mtime":1698860169126,"results":"146","hashOfConfig":"75"},{"size":657,"mtime":1698860054155,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"qdjrm5",{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\aksesMenu.js",["392"],[],"import instance from \"./config\";\r\n\r\nasync function getSelectedAksesMenu (id) {\r\n    try{\r\n        const result = await instance({\r\n            method: 'post',\r\n            url:'/getSelectedAksesMenu',\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            data: {\r\n                \"id_menu\": id\r\n            }\r\n        })\r\n        if(result.data.status) {\r\n            return result.data.data\r\n        } else {\r\n            throw result.data.message\r\n        }\r\n    }\r\n    catch(error) {\r\n    \r\n        throw error\r\n    }\r\n}\r\n\r\nexport default {\r\n    getSelectedAksesMenu,\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\bannerHome.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\config.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\gambarProduk.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\kategori.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\login.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\menu.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\produk.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\profileCompany.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\roleUser.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\size.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\subKategori.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\api\\user.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\bannerHome\\page.js",["393"],[],"'use client'\r\nimport { useState, useEffect } from \"react\"\r\nimport { ButtonPrimary } from \"@/components/buttonPrimary\";\r\nimport ButtonAllert from \"@/components/buttonAllert\";\r\nimport Galery from \"@/components/galery\";\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport DefaultCarousel  from \"@/components/Carousel\";\r\nimport aksesMenu from \"../../api/aksesMenu\";\r\nimport {getAllBanner ,create, deleteBanner} from \"@/app/api/bannerHome\"\r\nimport TitlePage from \"@/components/titlePage\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport FileInput from \"@/components/fileInput\"\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nexport default function BannerHome() {\r\n\r\n  \r\n    const MySwal = withReactContent(Swal);\r\n    const [reload, setReload] = useState(false);\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [loadingCarousel, setLoadingCarousel] = useState(false);\r\n    const [bannerItem, setBannerItem] = useState([])\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [link, setLink] = useState(\"\")\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n    const [loadingButton, setLoadingbutton] = useState(false);\r\n\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"Banner Home\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            console.log(find)\r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getBanner = await getAllBanner()\r\n                setBannerItem([...getBanner.data])\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleGetBanner = async () => {\r\n        setLoadingCarousel(true)\r\n        try {\r\n            const getBanner = await getAllBanner()\r\n            setBannerItem([...getBanner.data])\r\n            setLoadingCarousel(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0]\r\n        setSelectedImage(e.target.files[0]);\r\n\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        MySwal.fire({\r\n            title: `Apakah anda yakin ingin menghapus Banner Home ini \"${id}\" ?`,\r\n            text: \"Anda tidak bisa mengembalikan data ini!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Ya, Hapus!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteBanner(id)\r\n                .then(() => {\r\n                  setReload(!reload)\r\n                  MySwal.fire(\r\n                      'Deleted!',\r\n                      'Data berhasil di hapus',\r\n                      'success'\r\n                  )\r\n              }, err => {\r\n                  setReload(!reload)\r\n                  MySwal.fire({\r\n                      icon: \"error\",\r\n                      title: err,\r\n                  });\r\n              })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const removePicture = () => {\r\n        setSelectedImage(null)\r\n        setImagePreview(null)\r\n    }\r\n    \r\n    const handleImageUpload = async (event) => {\r\n        event.preventDefault()\r\n        console.log(selectedImage)\r\n        const formData = new FormData();\r\n        formData.append('image', selectedImage);\r\n    \r\n        setLoadingbutton(true)\r\n        try {\r\n          const createBannerHome = await create(formData)\r\n\r\n          if(createBannerHome) {\r\n            MySwal.fire({\r\n                icon: \"success\",\r\n                title: \"Berhasil Menambahkan Banner Home\", \r\n            })\r\n            setSelectedImage(null)\r\n        }\r\n        setSelectedImage(null)\r\n        setReload(!reload)\r\n        setLoadingbutton(false)\r\n            \r\n        } catch (error) {\r\n            setLoadingbutton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getAksesMenu();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        handleGetBanner();\r\n    },[reload])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n             <TitlePage title=\"Banner Home\" />\r\n             {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div>\r\n                :\r\n                aksesMenuData && aksesMenuData.act_read === 1 ? \r\n                <div className=\"flex flex-col gap-4\">\r\n                    <DefaultCarousel item={bannerItem} />\r\n                    {\r\n                        aksesMenuData && aksesMenuData.act_create === 1 &&\r\n                        <div className=\"w-full flex flex-col justify-start mb-6 \">\r\n                            <form className=\"flex flex-col gap-8\" encType=\"multipart/form-data\" onSubmit={handleImageUpload}>\r\n                                <FileInput handleImageChange={handleImageChange} imagePreview={imagePreview} />\r\n                                <div className=\"max-w-md\">\r\n                                    <FieldText setValue={setLink} value={link} isRequire={false} name=\"Link\" placeholder=\"www.subcmmapparel.com/kategori/namaproduk\" />\r\n                                </div>\r\n                                <div className=\"flex w-full\">\r\n                                    <ButtonPrimary width=\"\" name=\"Upload\" type={\"submit\"} isLoading={loadingButton}  />\r\n                                    <ButtonAllert width=\"\" name=\"Remove\" action={removePicture} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    <Galery item={bannerItem} deleteItem={handleDelete} />\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n             }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\kategori\\create\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\kategori\\edit\\[id]\\page.js",["394"],[],"'use client'\r\n\r\nimport { useState , useEffect} from \"react\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport {edit, getSelected} from \"@/app/api/kategori\";\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport validator from 'validator';\r\n\r\nexport default function EditKategori({params}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [idKategori, setIdKategori] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [validName, setValidName] = useState(null)\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"Kategori\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getKategori = await getSelected(params.id)\r\n                if(getKategori) {\r\n                    console.log(getKategori)\r\n                    setIdKategori(getKategori.id)\r\n                    setName(getKategori.name)\r\n                }\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handdleEdit = async (event) => {\r\n        event.preventDefault()\r\n        setLoadingButton(true)\r\n        try {\r\n            setValidName(null)\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"name minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } \r\n            else if (/select|insert|update|delete|drop table|create table|alter table/i.test(name)) {\r\n                setValidName(\"name tidak bisa berupa SQL\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } \r\n            const obj = {\r\n                id: idKategori,\r\n                name: name\r\n            }\r\n            const editCategori = await edit(obj)\r\n            if(editCategori) {\r\n                MySwal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Berhasil Mengubah Kategori\", \r\n                })\r\n            }\r\n            setLoadingButton(false)\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    const backNavigate = () => {\r\n        router.replace('/dashboard/kategori')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <TitlePage title=\"Edit Kategori\" />\r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div> :\r\n                aksesMenuData && aksesMenuData.act_update === 1 ?\r\n                <div>\r\n                    <div className=\"mb-8\">\r\n                        <ButtonPrimary name=\"kembali\" action={backNavigate}/>\r\n                    </div>\r\n                    <form onSubmit={handdleEdit}>\r\n                        <FieldText name={\"Name\"}  value={name} setValue={setName} isError={isErrorName} keterangan={validName} />\r\n                        <ButtonPrimary type={\"submit\"} name=\"Edit\" width=\"w-64\" isLoading={loadingButton} />\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\kategori\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\layout.tsx",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\page.tsx",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\produk\\create\\page.js",["395"],[],"'use client'\r\nimport {useEffect, useState} from \"react\"\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport {create} from \"@/app/api/produk\"\r\nimport normalizeBayar from \"../../../../helpers/normalizeBayar\"\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport Togle from \"@/components/togle\"\r\nimport SizeForm  from \"@/components/sizeForm\"\r\nimport FieldTanggal  from \"@/components/fieldTanggal\"\r\nimport { FieldTextArea } from \"@/components/fieldTextArea\"\r\nimport {FieldRupiah} from \"@/components/fieldRupiah\"\r\nimport {Select2Kategori} from \"@/components/select2Kategori\"\r\nimport {Select2SubKategori} from \"@/components/select2SubKategori\"\r\nimport MultiplePicForm from \"@/components/multiplePicForm\";\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport { useRouter } from \"next/navigation\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport validator from 'validator';\r\nimport dateFormat from \"dateformat\"\r\n\r\n\r\nconst MAX_COUNT = 5;\r\n\r\nexport default function CreateProduk() {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    // const [roleUser, setRoleUser] = useState({value:{id: 0, name: \"silahkan Memilih role user\"}, label:\"silahkan Memilih Role user\"})\r\n    const [name, setName] = useState(\"\");\r\n    const [harga, setHarga] = useState(\"\");\r\n    const [kategori, setKategori] = useState({value:{id: 0, name: \"silahkan Memilih Kategori\"}, label:\"silahkan Memilih Kategori\"})\r\n    const [subCategori, setSubCategori] = useState({value:{id: 0, name: \"silahkan Memilih Sub Kategori\"}, label:\"silahkan Memilih Sub Kategori\"});\r\n    const [warna, setWarna] = useState(\"\");\r\n    const [deskirpsi, setDeskripsi] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [jenisBahan, setJenisBahan] = useState(\"\");\r\n    const [linkShoope, setLinkShoope] = useState(\"\");\r\n    const [gambar, setGambar] = useState([])\r\n    const [images, setImages] = useState([]);\r\n    const [status, setStatus] = useState(1);\r\n    const [sizes, setSizes] = useState([]);\r\n    const [nameSize, setNameSize] = useState(\"\")\r\n    const [jumlahSize, setJumlahSize] = useState(\"0\")\r\n    const [sale, setSale] = useState(false)\r\n    const [startSale, setStartSale] = useState(\"\")\r\n    const [endSale, setEndSale] = useState(\"\")\r\n\r\n\r\n    const [fileLimit, setFileLimit] = useState(false);\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n    const [validName, setValidName] = useState(null)\r\n    const [validHarga, setValidHarga] = useState(null)\r\n    const [validKategori, setValidKategori] = useState(null)\r\n    const [validSubKategori, setValidSubKategori] = useState(null)\r\n    const [validSize, setValidSize] = useState(null)\r\n    const [validGambar, setValidGambar] = useState(null)\r\n    const [validSale, setValidSale] = useState(null)\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [isErrorHarga, setIsErrorHarga] = useState(false)\r\n    const [isErrorKategori, setIsErrorKategori] = useState(false)\r\n    const [isErrorSubKategori, setIsErrorSubKategori] = useState(false)\r\n    const [isErrorSize, setIsErrorSize] = useState(false)\r\n    const [isErrorSale, setIsErrorSale] = useState(false)\r\n    const [isErrorGambar, setIsErrorGambar] = useState(false)\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"Produk\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            console.log(find)\r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n    const backNavigate = () => {\r\n        router.replace('/dashboard/produk')\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        const chosenFiles = Array.prototype.slice.call(e.target.files)\r\n        handleUploadFiles(chosenFiles);\r\n    };\r\n\r\n    const handleSizeChange = () => {\r\n        const addSize = [...sizes]\r\n        if (addSize.findIndex((f) => f.name === nameSize) === -1) {\r\n            const obj = {\r\n                \"name\" : nameSize,\r\n                \"jumlah\": normalizeBayar(jumlahSize),\r\n            }\r\n            addSize.push(obj);   \r\n        }\r\n        setSizes(addSize)\r\n        setNameSize(\"\")\r\n        setJumlahSize(\"0\")\r\n    }\r\n\r\n    const handleDeletSize = (index) => {\r\n        const addSize = [...sizes]\r\n        addSize.splice(index, 1)\r\n        setSizes(addSize)   \r\n    }\r\n\r\n    const handleDeletePicture = (index) => {\r\n        console.log(\"masuk bos\", index)\r\n        const uploaded = [...gambar];\r\n        const preview = [...images];\r\n\r\n        uploaded.splice(index, 1)\r\n        preview.splice(index, 1)\r\n        // console.log(uploaded, preview)\r\n        setGambar(uploaded)\r\n        setImages(preview)\r\n    }\r\n\r\n    const handleUploadFiles = files => {\r\n        const uploaded = [...gambar];\r\n        const preview = [...images];\r\n        files.some((file) => {\r\n            if (uploaded.findIndex((f) => f.name === file.name) === -1) {\r\n                uploaded.push(file);\r\n                preview.push(URL.createObjectURL(file))\r\n            }\r\n        })\r\n        setGambar(uploaded)\r\n        setImages(preview)\r\n        \r\n    }\r\n\r\n    const addProduk = async (event) => {\r\n        try {\r\n            event.preventDefault()\r\n            setLoadingButton(true)\r\n            setIsErrorName(false)\r\n            setIsErrorHarga(false)\r\n            setIsErrorKategori(false)\r\n            setIsErrorSubKategori(false)\r\n            setIsErrorSize(false)\r\n            setIsErrorGambar(false)\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"username minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } else if(kategori.value.id === 0) {\r\n                setValidKategori(\"Anda Harus Memilih Kategori\")\r\n                setIsErrorKategori(true)\r\n                setLoadingButton(false)\r\n            } else if(subCategori.value.id === 0) {\r\n                setValidSubKategori(\"Anda Harus Memilih Sub Kategori\")\r\n                setIsErrorSubKategori(true)\r\n                setLoadingButton(false)\r\n            } else if(!sizes.length) {\r\n                setValidSize(\"Anda harus menambahkan size terlebih dahulu\")\r\n                setIsErrorSize(true)\r\n                setLoadingButton(false)\r\n            } else if(gambar.length < 1) {\r\n                setValidGambar(\"Anda Harus Memasukkan Gambar Min:1\");\r\n                setLoadingButton(false)\r\n                setIsErrorGambar(true)\r\n            } \r\n            else if(sale && (!startSale || !endSale)) {\r\n                setValidSale(\"Tanggal Sale Harus Di Isi Terlebih Dahulu\")\r\n                setLoadingButton(false)\r\n                setIsErrorSale(true)\r\n            }   \r\n            else {\r\n                const formData = new FormData();\r\n                formData.append('name', name);\r\n                formData.append(\"harga\", normalizeBayar(harga))\r\n                formData.append(\"idCategori\", kategori.value.id)\r\n                formData.append(\"idSubCategori\", subCategori.value.id)\r\n                formData.append(\"deskripsi\", deskirpsi)\r\n                formData.append(\"color\", warna)\r\n                formData.append(\"type\", type)\r\n                formData.append(\"jenisBahan\", jenisBahan)\r\n                formData.append(\"linkShoope\", linkShoope)\r\n                formData.append(\"sale\", sale ? 0 : 1)\r\n                if(startSale && endSale) {\r\n                    formData.append(\"startSale\", dateFormat(startSale, \"isoDate\"))\r\n                    formData.append(\"endSale\", dateFormat(endSale, \"isoDate\"))\r\n                } else {\r\n                    formData.append(\"startsale\", \"\")\r\n                    formData.append(\"endSale\", \"\")\r\n                }\r\n\r\n                formData.append(\"status\", status)\r\n                sizes.forEach((itemSize) => {\r\n                    formData.append(\"size[]\", JSON.stringify(itemSize))\r\n                })\r\n                gambar.forEach((image_file) => {\r\n                    formData.append('gambar[]', image_file);\r\n                    // formData.append('file[]', image_file);\r\n                })\r\n\r\n                const createProduk = await create(formData)\r\n                if(createProduk.status) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil Menambahkan Produk\", \r\n                    })\r\n                    setName(\"\")\r\n                    setHarga(\"\")\r\n                    setKategori({value:{id: 0, name: \"silahkan Memilih Kategori\"}, label:\"silahkan Memilih Kategori\"})\r\n                    setSubCategori({value:{id: 0, name: \"silahkan Memilih Sub Kategori\"}, label:\"silahkan Memilih Sub Kategori\"})\r\n                    setDeskripsi(\"\")\r\n                    setWarna(\"\")\r\n                    setType(\"\")\r\n                    setJenisBahan(\"\")\r\n                    setLinkShoope(\"\")\r\n                    setGambar([])\r\n                    setImages([])\r\n                    setSizes([])\r\n                    setNameSize(\"\")\r\n                    setJumlahSize(\"0\")\r\n                    setSale(0)\r\n                    setStartSale(\"\")\r\n                    setEndSale(\"\")\r\n                    setLoadingButton(false)\r\n                }\r\n\r\n            }\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    },[])\r\n\r\n    return(\r\n        <> \r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div> :\r\n                aksesMenuData && aksesMenuData.act_create === 1 ?\r\n                <div>\r\n                    <TitlePage title=\"Create Produk\" />\r\n                    <div className=\"mb-8\">\r\n                        <ButtonPrimary name=\"kembali\" action={backNavigate}/>\r\n                    </div>\r\n                    <form onSubmit={addProduk} className=\"w-full\">\r\n                        <div className=\"w-full flex flex-col md:flex-row md:gap-6\">\r\n                            {/* form detail */}\r\n                            <div className=\"w-full\">\r\n                                <FieldText \r\n                                    value={name} \r\n                                    setValue={setName} \r\n                                    isRequire={true} \r\n                                    name=\"Nama\" \r\n                                    placeholder=\"name\" \r\n                                    id=\"name\" \r\n                                    isError={isErrorName} \r\n                                    keterangan={validName} \r\n                                />\r\n                                <FieldRupiah \r\n                                    title={\"Harga\"} \r\n                                    value={harga}\r\n                                    setValue={setHarga}\r\n                                    isRequire={true} \r\n                                    isError={isErrorHarga}\r\n                                    keterangan={validHarga}\r\n                                />\r\n                                <Select2Kategori \r\n                                    value={kategori} \r\n                                    setValue={setKategori} \r\n                                    isError={isErrorKategori}\r\n                                    keterangan={validKategori}\r\n                                />\r\n                                {\r\n                                    kategori.value.id !== 0 && \r\n                                    <Select2SubKategori \r\n                                        idKategori={kategori.value.id} \r\n                                        value={subCategori} \r\n                                        setValue={setSubCategori} \r\n                                        isError={isErrorSubKategori}\r\n                                        keterangan={validSubKategori}\r\n                                        /> \r\n                                }\r\n                                <FieldText \r\n                                    value={warna} \r\n                                    setValue={setWarna} \r\n                                    name=\"Warna\"\r\n                                    id=\"warna\"\r\n                                    placeholder=\"ex: hitam, jika tidak ada masukkan '-' \"\r\n                                    isRequire={true}  \r\n                                />\r\n                                <FieldTextArea \r\n                                    value={deskirpsi} \r\n                                    setValue={setDeskripsi} \r\n                                    name=\"Deskripsi\"\r\n                                    id=\"deskripsi\"\r\n                                    isRequire={true} \r\n                                    placeholder=\"jika tidak ada masukkan '-'\" \r\n                                    \r\n                                />\r\n                                <FieldText \r\n                                    value={type} \r\n                                    setValue={setType} \r\n                                    name=\"Type\"\r\n                                    id=\"type\" \r\n                                    isRequire={true} \r\n                                    placeholder=\"jika tidak ada masukkan '-'\"\r\n                                />\r\n                                <FieldText \r\n                                    value={jenisBahan} \r\n                                    setValue={setJenisBahan} \r\n                                    name=\"Jenis Bahan\"\r\n                                    id=\"jenis bahan\"\r\n                                    placeholder=\"ex: Katun, jika tidak ada masukkan '-'\"\r\n                                    isRequire={true} \r\n                                />\r\n                                <FieldText \r\n                                    value={linkShoope} \r\n                                    setValue={setLinkShoope} \r\n                                    name=\"Link Shoope\"\r\n                                    id=\"link shoope\"\r\n                                    isRequire={true} \r\n                                />\r\n                                <Togle \r\n                                    value={sale}\r\n                                    setValue={setSale}\r\n                                    title={\"Aktifkan Sale\"}\r\n                                    key={\"aktifkanSale\"}\r\n                                />\r\n                                {\r\n                                    sale ?\r\n                                    <>\r\n                                        <FieldTanggal  \r\n                                            value={startSale}\r\n                                            setValue={setStartSale}\r\n                                            name={\"Tanggal Mulai Sale\"}\r\n                                            isRequire={true}\r\n                                        />\r\n                                        <FieldTanggal  \r\n                                            value={endSale}\r\n                                            setValue={setEndSale}\r\n                                            name={\"Tanggal Berakhir Sale\"}\r\n                                            isRequire={true}\r\n                                        />\r\n                                        {\r\n                                            isErrorSale &&\r\n                                            <p className=\"text-sm text-red-500 mb-2\">{validSale}</p>\r\n                                        }\r\n                                    </>\r\n                                    :null\r\n                                }\r\n                            </div>\r\n                            {/* form pick picture */}\r\n                            <div className=\"w-full\">\r\n                                <SizeForm \r\n                                    sizes={sizes}\r\n                                    nameSize={nameSize}\r\n                                    jumlahSize={jumlahSize}\r\n                                    setNameSize={setNameSize}\r\n                                    SetJumlahSize={setJumlahSize}\r\n                                    handleAddSize={handleSizeChange}\r\n                                    handleDeleteSize={handleDeletSize}\r\n                                    isError={isErrorSize}\r\n                                    keterangan={validSize}\r\n                                />\r\n                                <MultiplePicForm state={gambar} handleState={handleImageChange} isError={isErrorGambar} keterangan={validGambar} />\r\n                                <div className={`${images.length ? \"p-4 bg-gray-400 rounded-lg my-6\" : \"hidden\"}`}>\r\n                                    <ol className=\"flex flex-col md:flex-row\">\r\n                                        {[...images].map((f, i) => (\r\n                                            <li  key={i} className=\"block p-1 w-1/ h-full sm:w-1/3 md:w-1/4 lg:w-1/6 xl:w-1/8\">\r\n                                                <img onClick={() => handleDeletePicture(i)} alt=\"upload preview\" src={f} className=\"img-preview w-full h-full sticky object-cover rounded-md bg-fixed\" />\r\n                                            </li>\r\n                                        ))}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary name=\"Create\" width=\"w-full\" isLoading={loadingButton} type={\"submit\"} />\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\produk\\detail\\[id]\\page.js",["396","397","398"],[],"\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport {getSelectedProduk} from \"@/app/api/produk\"\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport FormDetailProduk from \"@/components/formDetailProduk\"\r\nimport FormEditProduk from \"@/components/formEditProduk\"\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { ButtonPrimary } from \"@/components/buttonPrimary\";\r\nimport SpinnerLoading from \"@/components/spinner\";\r\n\r\nexport default function DetailProduk({params}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [idProduk, setIdProduk] = useState(\"\")\r\n    const [harga, setHarga] = useState(\"\");\r\n    const [kategori, setKategori] = useState({value:{id: 0, name: \"silahkan Memilih Kategori\"}, label:\"silahkan Memilih Kategori\"})\r\n    const [subCategori, setSubCategori] = useState({value:{id: 0, name: \"silahkan Memilih Sub Kategori\"}, label:\"silahkan Memilih Sub Kategori\"});\r\n    const [warna, setWarna] = useState(\"\");\r\n    const [deskirpsi, setDeskripsi] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [jenisBahan, setJenisBahan] = useState(\"\");\r\n    const [linkShoope, setLinkShoope] = useState(\"\");\r\n    const [gambar, setGambar] = useState([])\r\n    const [images, setImages] = useState([]);\r\n    const [sale, setSale] = useState(0)\r\n    const [startSale, setStartSale] = useState(null)\r\n    const [endSale, setEndSale] = useState(null)\r\n    const [status, setStatus] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false)\r\n    const [objProdukEdit, setObjProdukEdit] = useState({})\r\n    const [dataNotFound, setDataNotFound] = useState(\"\")\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            setDataNotFound(\"\")\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"Produk\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            \r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getProduk = await getSelectedProduk(params.id)\r\n                if(getProduk) {\r\n                    setObjProdukEdit(getProduk)\r\n                    setIdProduk(getProduk.id)\r\n                    setName(getProduk.name)\r\n                    setBarcode(getProduk.barcode)\r\n                    setHarga(getProduk.harga)\r\n                    setKategori({value:{id: getProduk.id_categori, name: getProduk.categoriName}, label:getProduk.categoriName})\r\n                    setSubCategori({value:{id: getProduk.id_sub_categori, name: getProduk.subKategoriName}, label:getProduk.subKategoriName})\r\n                    setDeskripsi(getProduk.deskripsi)\r\n                    setWarna(getProduk.color)\r\n                    setType(getProduk.type)\r\n                    setJenisBahan(getProduk.jenis_bahan)\r\n                    setLinkShoope(getProduk.link_shoope)\r\n                    setSale(getProduk.sale)\r\n                    setStartSale(getProduk.start_sale)\r\n                    setEndSale(getProduk.end_sale)\r\n                    if(getProduk.status === 1) {\r\n                        setStatus(true)\r\n                    } else {\r\n                        setStatus(false)\r\n                    }\r\n                    const previewImage = [...images]\r\n                    if(getProduk.gambar.length) {\r\n                        setGambar(getProduk.gambar)\r\n                        getProduk.gambar.some(item => {\r\n                            previewImage.push(item.path)\r\n                        });\r\n                    }\r\n                    setImages(previewImage)\r\n                }\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            setDataNotFound(error)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleChangeForm = () => {\r\n        setChangeForm(true)\r\n    }\r\n\r\n    const handleKembali = () => {\r\n        router.replace('/dashboard/produk')\r\n    }\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                loadingPage ?\r\n                <div className='w-full h-screen flex items-center justify-center'>\r\n                    <SpinnerLoading />\r\n                </div>\r\n                :\r\n                dataNotFound ? \r\n                <div className=\"fixed w-full max-h-full mt-10\">\r\n                    <div className=\"absolute top-1/5 left-1/4 w-full max-w-xl max-h-full\">\r\n                        <div className=\"flex flex-col w-full\">\r\n                            <img className=\"w-5/6\" src=\"/404.png\" />\r\n                            <div className=\"w-full h-full ml-8 mt-10\">\r\n                                <span className=\"font-bold text-2xl\">Maaf, {dataNotFound}</span>\r\n                            </div>\r\n                            <div className=\"ml-28 mt-9\">\r\n                                <ButtonPrimary name=\"Kembali\" width=\"w-1/3\" action={handleKembali} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                !changeForm ? \r\n                <FormDetailProduk \r\n                    name={name}\r\n                    barcode={barcode}\r\n                    harga={harga}\r\n                    categoriName={kategori.label}\r\n                    subKategoriName={subCategori.label}\r\n                    deskripsi={deskirpsi}\r\n                    color= {warna}\r\n                    type = {type}\r\n                    jenis_bahan ={jenisBahan}\r\n                    link_shoope ={linkShoope}\r\n                    sale={sale}\r\n                    start_sale={startSale}\r\n                    end_sale={endSale}\r\n                    status={status}\r\n                    gambar={images}\r\n                    handleChangeForm = {handleChangeForm}\r\n                />\r\n                :\r\n                <FormEditProduk idProduk={params.id} getProduk={objProdukEdit} aksesMenuData={aksesMenuData}  />\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\produk\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\profileCompany\\page.js",["399"],[],"'use client'\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport {get, editProfileCompany} from \"@/app/api/ProfileCompany\";\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport { FieldText } from \"@/components/fieldText\";\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport validator from 'validator';\r\n\r\nexport default function ProfileCompany() {\r\n    const MySwal = withReactContent(Swal)\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [id, setId] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [alamat, setAlamat] = useState(\"\")\r\n    const [nomorHp, setNomorHp] = useState(\"\")\r\n    const [instagram, setInstagram] = useState(\"\")\r\n    const [twitter, setTwitter] = useState(\"\")\r\n    const [facebook, setFacebook] = useState(\"\")\r\n    const [youtube, setYoutube] = useState(\"\")\r\n    const [loadingPage, setLoadingPage] = useState(false)\r\n    const [loadingButton, setLoadingButton] = useState(false)\r\n    const [validName, setValidName] = useState(null)\r\n    const [validAlamat, setValidAlamat] = useState(null)\r\n    const [validNomorHp, setValidNomorHp] = useState(null)\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [isErrorAlamat, setIsErrorAlamat] = useState(false)\r\n    const [isErrorNomorHp, setIsErrorNomorHp] = useState(false)\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"Profil Perusahaan\");\r\n            console.log(findIdMenu.id)\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            \r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getProfilCompanyData = await get()\r\n                console.log(getProfilCompanyData)\r\n                if(getProfilCompanyData) {\r\n                    setId(getProfilCompanyData.id)   \r\n                    setName(getProfilCompanyData.name)\r\n                    setAlamat(getProfilCompanyData.alamat)\r\n                    setNomorHp(getProfilCompanyData.nomor_hp)\r\n                    setInstagram(getProfilCompanyData.instagram ? getProfilCompanyData.instagram : \"\")\r\n                    setTwitter(getProfilCompanyData.twitter ? getProfilCompanyData.twitter : \"\")\r\n                    setFacebook(getProfilCompanyData.facebook ? getProfilCompanyData.facebook : \"\")\r\n                    setYoutube(getProfilCompanyData.youtube ? getProfilCompanyData.youtube : \"\")\r\n                }\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            // setDataNotFound(error)\r\n            console.log(error);\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n    const handleUpdate = async (event) => {\r\n        event.preventDefault()\r\n        setLoadingButton(true)\r\n        try {\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"name minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } else if(!validator.isLength(alamat, { min: 3 })) {\r\n                setValidAlamat(\"alamat minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorAlamat(true)\r\n            } else if(!validator.isLength(alamat, { min: 8 })) {\r\n                setValidNomorHp(\"nomor hp minimal panjang 8 angka\");\r\n                setLoadingButton(false)\r\n                setIsErrorNomorHp(true)\r\n            } else {\r\n                const obj = {\r\n                    id: id,\r\n                    name: name,\r\n                    alamat: alamat,\r\n                    nomorHp: nomorHp,\r\n                    instagram: instagram,\r\n                    twitter: instagram,\r\n                    facebook: facebook,\r\n                    youtube: youtube,\r\n                }\r\n\r\n                const updateProfilCompany = await editProfileCompany(obj)\r\n                if(updateProfilCompany.status) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil Mengubah Profil company\", \r\n                    })\r\n                }\r\n                setLoadingButton(false)\r\n            }\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <TitlePage title=\"Profil Perusahaan\" />\r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div>\r\n                :\r\n                aksesMenuData && aksesMenuData.act_read === 1 ?\r\n                <div className=\"\">\r\n                    {\r\n                        aksesMenuData && aksesMenuData.act_create === 1 &&\r\n                        <div>\r\n                            <form onSubmit={handleUpdate}>\r\n                                <FieldText name=\"Name\" id=\"name\" value={name} setValue={setName} isError={validName} isRequire={true} />\r\n                                <FieldText name=\"Alamat\" id=\"alamat\" value={alamat} setValue={setAlamat} isError={validAlamat} isRequire={true} />\r\n                                <FieldText name=\"Nomor HP\" id=\"nomorhp\" value={nomorHp} setValue={setNomorHp} isError={validNomorHp} isRequire={true} />\r\n                                <FieldText name=\"Instagram\" id=\"instagram\" value={instagram} setValue={setInstagram} isRequire={false} />\r\n                                <FieldText name=\"Twitter\" id=\"twitter\" value={twitter} setValue={setTwitter} isRequire={false} />\r\n                                <FieldText name=\"Facebook\" id=\"facebook\" value={facebook} setValue={setFacebook} isRequire={false} />\r\n                                <FieldText name=\"Youtube\" id=\"youtube\" value={youtube} setValue={setYoutube} isRequire={false} />\r\n                                <ButtonPrimary type={\"submit\"} name=\"Update\" isLoading={loadingButton} />\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\roleUser\\create\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\roleUser\\edit\\[id]\\page.js",["400"],[],"'use client'\r\nimport { useState, useEffect } from \"react\"\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport {getSelectedUser} from \"@/app/api/user\"\r\nimport {getSelected, edit} from \"@/app/api/roleUser\"\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport Togle from \"@/components/togle\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport validator from 'validator';\r\n\r\n\r\nexport default function EditRoleUser({params}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [validName, setValidName] = useState(null)\r\n    const [validProduk, setValidProduk] = useState(null)\r\n    const [validKategori, setValidKategori] = useState(null)\r\n    const [validProfilPerushaan, setValidProfilPerusahaan] = useState(null)\r\n    const [validUser, setValidUser] = useState(null)\r\n    const [validBannerHome, setValidBannerHome] = useState(null)\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [idRoleUser, setIdRoleUser] = useState(\"\")\r\n    const [name, setName] = useState(\"\");\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n    const [dashboardRead, setDashboardRead] = useState(true);\r\n    const [dashboardCreate, setDashboardCreate] = useState(false);\r\n    const [dashboardUpdate, setDashboardUpdate] = useState(false);\r\n    const [dashboardDelete, setDashboardDelete] = useState(false);\r\n    const [produkRead, setProdukRead] = useState(false);\r\n    const [produkCreate, setProdukCreate] = useState(false);\r\n    const [produkUpdate, setProdukUpdate] = useState(false);\r\n    const [produkDelete, setProdukDelete] = useState(false);\r\n    const [kategoriRead, setKategoriRead] = useState(false);\r\n    const [kategoriCreate, setKategoriCreate] = useState(false);\r\n    const [kategoriUpdate, setKategoriUpdate] = useState(false);\r\n    const [kategoriDelete, setKategoriDelete] = useState(false);\r\n    const [profilPerusahaanRead, setProfilPerusahaanRead] = useState(false);\r\n    const [profilPerusahaanCreate, setProfilPerusahaanCreate] = useState(false);\r\n    const [profilPerusahaanUpdate, setProfilPerusahaanUpdate] = useState(false);\r\n    const [profilPerusahaanDelete, setProfilPerusahaanDelete] = useState(false);\r\n    const [userRead, setUserRead] = useState(false);\r\n    const [userCreate, setUserCreate] = useState(false);\r\n    const [userUpdate, setUserUpdate] = useState(false);\r\n    const [userDelete, setUserDelete] = useState(false);\r\n    const [bannerHomeRead, setBannerHomeRead] = useState(false);\r\n    const [bannerHomeCreate, setBannerHomeCreate] = useState(false);\r\n    const [bannerHomeUpdate, setBannerHomeUpdate] = useState(false);\r\n    const [bannerHomeDelete, setBannerHomeDelete] = useState(false);\r\n\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"User\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getSelectedRoleUser = await getSelected(params.id)\r\n                console.log('get selected role user',getSelectedRoleUser)\r\n                if(getSelectedRoleUser) {\r\n                    setIdRoleUser(getSelectedRoleUser.id)\r\n                    setName(getSelectedRoleUser.name)\r\n                    if(getSelectedRoleUser.akses_menu) {\r\n                        getSelectedRoleUser.akses_menu.map((item)=>{\r\n                            if(item.id_menu === 1) {\r\n                                setDashboardRead(item.act_read ? true : false)\r\n                                setDashboardCreate(item.act_create ? true : false)\r\n                                setDashboardUpdate(item.act_update ? true : false)\r\n                                setDashboardDelete(item.act_delete ? true : false)\r\n                            } else if(item.id_menu === 2) {\r\n                                setProdukRead(item.act_read ? true : false)\r\n                                setProdukCreate(item.act_create ? true : false)\r\n                                setProdukUpdate(item.act_update ? true : false)\r\n                                setProdukDelete(item.act_delete ? true : false)\r\n                            } else if(item.id_menu === 3) {\r\n                                setKategoriRead(item.act_read ? true : false)\r\n                                setKategoriCreate(item.act_create ? true : false)\r\n                                setKategoriUpdate(item.act_update ? true : false)\r\n                                setKategoriDelete(item.act_delete ? true : false)\r\n                            } else if(item.id_menu === 4) {\r\n                                setProfilPerusahaanRead(item.act_read ? true : false)\r\n                                setProfilPerusahaanCreate(item.act_create ? true : false)\r\n                                setProfilPerusahaanUpdate(item.act_update ? true : false)\r\n                                setProfilPerusahaanDelete(item.act_delete ? true : false)\r\n                            } else if(item.id_menu === 5) {\r\n                                setUserRead(item.act_read ? true : false)\r\n                                setUserCreate(item.act_create ? true : false)\r\n                                setUserUpdate(item.act_update ? true : false)\r\n                                setUserDelete(item.act_delete ? true : false)\r\n                            } else if(item.id_menu === 6) {\r\n                                setBannerHomeRead(item.act_read ? true : false)\r\n                                setBannerHomeCreate(item.act_create ? true : false)\r\n                                setBannerHomeUpdate(item.act_update ? true : false)\r\n                                setBannerHomeDelete(item.act_delete ? true : false)\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handdleCreate = async (event) => {\r\n        try {\r\n            event.preventDefault()\r\n            setLoadingButton(true)\r\n            setValidProduk(null)\r\n            setValidKategori(null)\r\n            setValidProfilPerusahaan(null)\r\n            setValidUser(null)\r\n            setValidBannerHome(null)\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"name minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } \r\n            else if (/select|insert|update|delete|drop table|create table|alter table/i.test(name)) {\r\n                setValidName(\"name tidak bisa berupa SQL\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } \r\n            else if((produkCreate || produkUpdate || produkDelete) && !produkRead) {\r\n                    setLoadingButton(false)\r\n                    setValidProduk(\"Produk read harus di aktifkan\")\r\n            } \r\n            else if((kategoriCreate || kategoriUpdate || kategoriDelete) && !kategoriRead) {\r\n                setLoadingButton(false)\r\n                setValidKategori(\"Kategori read harus di aktifkan\")\r\n            } \r\n            \r\n            else if((profilPerusahaanCreate || profilPerusahaanUpdate || profilPerusahaanDelete) && !profilPerusahaanRead) {\r\n                    setLoadingButton(false)\r\n                    setValidProfilPerusahaan(\"Profil Perusahaan read harus di aktifkan\")\r\n            } \r\n            else if((userCreate || userUpdate || userDelete) && !userRead) {\r\n                    setLoadingButton(false)\r\n                    setValidUser(\"User read harus di aktifkan\")\r\n            } \r\n            else if((bannerHomeCreate || bannerHomeUpdate || bannerHomeDelete) && !bannerHomeRead) {\r\n                    setLoadingButton(false)\r\n                    setValidBannerHome(\"Banner Home read harus di aktifkan\")\r\n            }\r\n             else {\r\n                const obj = {\r\n                    id: idRoleUser,\r\n                    name,\r\n                    aksesMenu : []\r\n                }\r\n               \r\n                const objDashboard = {\r\n                    name: \"Dashboard\",\r\n                    actRead: dashboardRead,\r\n                    actCreate: dashboardCreate,\r\n                    actUpdate: dashboardUpdate,\r\n                    actDelete: dashboardDelete\r\n                }\r\n                obj.aksesMenu.push(objDashboard)\r\n                \r\n                const objProduk = {\r\n                    name: \"Produk\",\r\n                    actRead: produkRead,\r\n                    actCreate: produkCreate,\r\n                    actUpdate: produkUpdate,\r\n                    actDelete: produkDelete\r\n                }\r\n                obj.aksesMenu.push(objProduk)\r\n            \r\n                const obKategori = {\r\n                    name: \"Kategori\",\r\n                    actRead: kategoriRead,\r\n                    actCreate: kategoriCreate,\r\n                    actUpdate: kategoriUpdate,\r\n                    actDelete: kategoriDelete\r\n                }\r\n                obj.aksesMenu.push(obKategori)\r\n            \r\n                const objProfilPerusahaan = {\r\n                    name: \"Profil Perusahaan\",\r\n                    actRead: profilPerusahaanRead,\r\n                    actCreate: profilPerusahaanCreate,\r\n                    actUpdate: profilPerusahaanUpdate,\r\n                    actDelete: profilPerusahaanDelete\r\n                }\r\n                obj.aksesMenu.push(objProfilPerusahaan)\r\n            \r\n                const objUser = {\r\n                    name: \"User\",\r\n                    actRead: userRead,\r\n                    actCreate: userCreate,\r\n                    actUpdate: userUpdate,\r\n                    actDelete: userDelete\r\n                }\r\n                obj.aksesMenu.push(objUser)\r\n            \r\n                const objBannerHome = {\r\n                    name: \"Banner Home\",\r\n                    actRead: bannerHomeRead,\r\n                    actCreate: bannerHomeCreate,\r\n                    actUpdate: bannerHomeUpdate,\r\n                    actDelete: bannerHomeDelete\r\n                }\r\n                obj.aksesMenu.push(objBannerHome)\r\n               \r\n\r\n                const result = await edit(obj)\r\n                if(result) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil Mengubah Role User\", \r\n                    })\r\n                    \r\n                }\r\n                setLoadingButton(false)\r\n                \r\n            }\r\n            \r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n    const backNavigate = () => {\r\n        router.replace('/dashboard/roleUser')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    },[])\r\n    return(\r\n        <div>\r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div> :\r\n                aksesMenuData && aksesMenuData.act_update === 1 ?\r\n                <div>\r\n                    <TitlePage title=\"Edit Role User\" />\r\n                    <div className=\"mb-8\">\r\n                        <ButtonPrimary name=\"kembali\" action={backNavigate}/>\r\n                    </div>\r\n                    <form onSubmit={handdleCreate}>\r\n                        <FieldText name={\"Name\"}  value={name} setValue={setName} isError={isErrorName} keterangan={validName} />\r\n                        <div className=\"flex flex-col mb-3\" >\r\n                            <span className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Produk</span>\r\n                            <div className=\"flex flex-col md:flex-row md:gap-5\">\r\n                                <Togle title={\"Read\"} value={produkRead} setValue={setProdukRead} />\r\n                                <Togle title={\"Create\"} value={produkCreate} setValue={setProdukCreate} />\r\n                                <Togle title={\"Edit\"} value={produkUpdate} setValue={setProdukUpdate} />\r\n                                <Togle title={\"Delete\"} value={produkDelete} setValue={setProdukDelete} />\r\n                            </div>\r\n                            {\r\n                                validProduk &&\r\n                                <p className=\"text-sm text-red-500\">{validProduk}</p>\r\n                            }\r\n                        </div>\r\n                        <div className=\"flex flex-col mb-3\" >\r\n                            <span className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Kategori</span>\r\n                            <div className=\"flex flex-col md:flex-row md:gap-5\">\r\n                                <Togle title={\"Read\"} value={kategoriRead} setValue={setKategoriRead} />\r\n                                <Togle title={\"Create\"} value={kategoriCreate} setValue={setKategoriCreate} />\r\n                                <Togle title={\"Edit\"} value={kategoriUpdate} setValue={setKategoriUpdate} />\r\n                                <Togle title={\"Delete\"} value={kategoriDelete} setValue={setKategoriDelete} />\r\n                            </div>\r\n                            {\r\n                                validKategori &&\r\n                                <p className=\"text-sm text-red-500\">{validKategori}</p>\r\n                            }\r\n                        </div>\r\n                        <div className=\"flex flex-col mb-3\" >\r\n                            <span className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Profil Perusahaan</span>\r\n                            <div className=\"flex flex-col md:flex-row md:gap-5\">\r\n                                <Togle title={\"Read\"} value={profilPerusahaanRead} setValue={setProfilPerusahaanRead} />\r\n                                <Togle title={\"Edit\"} value={profilPerusahaanUpdate} setValue={setProfilPerusahaanUpdate} />\r\n                            </div>\r\n                            {\r\n                                validProfilPerushaan &&\r\n                                <p className=\"text-sm text-red-500\">{validProfilPerushaan}</p>\r\n                            }\r\n                        </div>\r\n                        <div className=\"flex flex-col mb-3\" >\r\n                            <span className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">User</span>\r\n                            <div className=\"flex flex-col md:flex-row md:gap-5\">\r\n                                <Togle title={\"Read\"} value={userRead} setValue={setUserRead} />\r\n                                <Togle title={\"Create\"} value={userCreate} setValue={setUserCreate} />\r\n                                <Togle title={\"Edit\"} value={userUpdate} setValue={setUserUpdate} />\r\n                                <Togle title={\"Delete\"} value={userDelete} setValue={setUserDelete} />\r\n                            </div>\r\n                            {\r\n                                validUser &&\r\n                                <p className=\"text-sm text-red-500\">{validUser}</p>\r\n                            }\r\n                        </div>\r\n                        <div className=\"flex flex-col mb-3\" >\r\n                            <span className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Banner Home</span>\r\n                            <div className=\"flex flex-col md:flex-row md:gap-5\">\r\n                                <Togle title={\"Read\"} value={bannerHomeRead} setValue={setBannerHomeRead} />\r\n                                <Togle title={\"Create\"} value={bannerHomeCreate} setValue={setBannerHomeCreate} />\r\n                                <Togle title={\"Edit\"} value={bannerHomeUpdate} setValue={setBannerHomeUpdate} />\r\n                                <Togle title={\"Delete\"} value={bannerHomeDelete} setValue={setBannerHomeDelete} />\r\n                            </div>\r\n                            {\r\n                                validBannerHome &&\r\n                                <p className=\"text-sm text-red-500\">{validBannerHome}</p>\r\n                            }\r\n                        </div>\r\n                        <ButtonPrimary type={\"submit\"} name=\"create\" width=\"w-full\" isLoading={loadingButton} />\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\roleUser\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\subKategori\\create\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\subKategori\\edit\\[id]\\page.js",["401"],[],"'use client'\r\n\r\nimport { useState , useEffect} from \"react\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport {edit, getSelected} from \"@/app/api/subKategori\";\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport {Select2Kategori} from \"@/components/select2Kategori\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport validator from 'validator';\r\n\r\nexport default function EditSubKategori({params}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [idSubKategori, setIdSubKategori] = useState(\"\");\r\n    const [kategori, setKategori] = useState({value:{id: 0, name: \"silahkan Memilih Kategori\"}, label:\"silahkan Memilih Kategori\"})\r\n    const [name, setName] = useState(\"\");\r\n    const [validName, setValidName] = useState(null)\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"Kategori\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getSelectedSubKategori = await getSelected(params.id)\r\n                if(getSelectedSubKategori) {\r\n                    setIdSubKategori(getSelectedSubKategori.id)\r\n                    setName(getSelectedSubKategori.name)\r\n                    setKategori({value:{id: getSelectedSubKategori.id_categori, name: getSelectedSubKategori.kategori}, label:getSelectedSubKategori.kategori})\r\n                }\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handdleCreate = async (event) => {\r\n        event.preventDefault()\r\n        setLoadingButton(true)\r\n        try {\r\n            setValidName(null)\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"name minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } \r\n            else if (/select|insert|update|delete|drop table|create table|alter table/i.test(name)) {\r\n                setValidName(\"name tidak bisa berupa SQL\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } else if(kategori.value.id === 0) {\r\n                setLoadingButton(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Anda harus memilih kategori terlebih dahulu\",\r\n                });\r\n            } else {\r\n                const obj = {\r\n                    id: idSubKategori,\r\n                    idCategori: kategori.value.id,\r\n                    name: name\r\n                }\r\n                const createCategori = await edit(obj)\r\n                if(createCategori) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil Mengubah Sub Kategori\", \r\n                    })\r\n                }\r\n            }\r\n            setLoadingButton(false)\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    const backNavigate = () => {\r\n        router.replace('/dashboard/kategori')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <TitlePage title=\"Edit Sub Kategori\" />\r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div> :\r\n                aksesMenuData && aksesMenuData.act_create === 1 ?\r\n                <div>\r\n                    <div className=\"mb-8\">\r\n                        <ButtonPrimary name=\"kembali\" action={backNavigate}/>\r\n                    </div>\r\n                    <form onSubmit={handdleCreate}>\r\n                        <Select2Kategori value={kategori} setValue={setKategori} />\r\n                        <FieldText name={\"Name\"}  value={name} setValue={setName} isError={isErrorName} keterangan={validName} />\r\n                        <ButtonPrimary type={\"submit\"} name=\"Edit\" width=\"w-64\" isLoading={loadingButton} />\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\subKategori\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\user\\create\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\user\\edit\\[id]\\page.js",["402"],[],"'use client'\r\n\r\nimport {useEffect, useState} from \"react\"\r\nimport aksesMenu from \"@/app/api/aksesMenu\"\r\nimport {edit, getSelectedUser} from \"@/app/api/user\"\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport {Select2RoleUser} from \"@/components/select2RoleUser\"\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport { FieldPassword } from \"@/components/fieldPassword\"\r\nimport Togle from \"@/components/togle\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport validator from 'validator';\r\n\r\nexport default function EditUser({params}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [roleUser, setRoleUser] = useState({value:{id: 0, name: \"silahkan Memilih role user\"}, label:\"silahkan Memilih Role user\"})\r\n    const [idUser, setIdUser] = useState(\"\")\r\n    const [name, setName] = useState(\"\");\r\n    const [username, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isShowPassword, setIsShowPassword] = useState(false);\r\n    const [aksesMenuData, setAksesMenuData] = useState({});\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n    const [includePassword, setIncludePassword] = useState(false);\r\n    const [validName, setValidName] = useState(null)\r\n    const [validUsername, setValidUsername] = useState(null)\r\n    const [validPassword, setValidPassword] = useState(\"\")\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [isErrorUsername, setIsErrorUsername] = useState(false)\r\n    const [isErrorPassword, setIsErrorPassword] = useState(false)\r\n\r\n    const getAksesMenu = async () => {\r\n        try {\r\n            setLoadingPage(true)\r\n            const menu = JSON.parse(localStorage.getItem('menu'));\r\n            const findIdMenu = menu.find(item => item.name === \"User\");\r\n            const find = await aksesMenu.getSelectedAksesMenu(findIdMenu.id);\r\n            console.log(find)\r\n            if(find) {\r\n                setAksesMenuData({...find});\r\n                const getUser = await getSelectedUser(params.id)\r\n                if(getUser) {\r\n                    setIdUser(getUser.id)\r\n                    setName(getUser.name)\r\n                    setUserName(getUser.username)\r\n                    setRoleUser({value:{id: getUser.id_role, name: getUser.name_role}, label:getUser.name_role})\r\n                }\r\n\r\n            }\r\n            setLoadingPage(false)\r\n        } catch (error) {\r\n            setLoadingPage(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const backNavigate = () => {\r\n        router.replace('/dashboard/user')\r\n    }\r\n\r\n    const handdleEdit = async (event) => {\r\n        try {\r\n            event.preventDefault()\r\n            setLoadingButton(true)\r\n            setIsErrorName(false)\r\n            setIsErrorUsername(false)\r\n            setIsErrorPassword(false)\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"name minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } else if (/select|insert|update|delete|drop table|create table|alter table/i.test(name)) {\r\n                setValidName(\"name tidak bisa berupa SQL\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } else if (!validator.isLength(username, { min: 3 })) {\r\n                setValidUsername(\"username minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorUsername(true)\r\n            } else if (/select|insert|update|delete|drop table|create table|alter table/i.test(username)) {\r\n                setValidUsername(\"username tidak bisa berupa SQL\");\r\n                setLoadingButton(false)\r\n                setIsErrorUsername(true)\r\n            } else if (/[<>{}()[\\]%&!$#^|\\\\/*?\"=]/i.test(username)) {\r\n                setValidUsername(\"username tidak boleh memakai simbol\");\r\n                setLoadingButton(false)\r\n                setIsError(true)\r\n            } else if(password) {\r\n                if(!validator.isLength(password,{min: 8})){\r\n                    setValidPassword(\"Password harus minimal 8 karakter huruf\");\r\n                    setLoadingButton(false)\r\n                    setIsErrorPassword(true)\r\n                }\r\n            } \r\n            else if(roleUser.value.id === 0) {\r\n                setLoadingButton(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Anda harus memilih role user terlebih dahulu\",\r\n                });\r\n            } else if(password) {\r\n                const payload = {\r\n                    \"id\" : idUser,\r\n                    \"name\": name,\r\n                    \"username\": username,\r\n                    \"id_role\" : roleUser.value.id,\r\n                    \"password\" : password\r\n                }\r\n\r\n                const editUser = await edit(payload)\r\n                if(editUser.status) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil mengubah user\", \r\n                    })\r\n                }\r\n\r\n            } else {\r\n                const payload = {\r\n                    \"id\" : idUser,\r\n                    \"name\": name,\r\n                    \"username\": username,\r\n                    \"id_role\" : roleUser.value.id,\r\n                }\r\n\r\n                const editUser = await edit(payload)\r\n                if(editUser.status) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil mengubah user\", \r\n                    })\r\n                }\r\n            }\r\n            setLoadingButton(false)\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengubah user\",\r\n            });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getAksesMenu()\r\n    },[])\r\n\r\n\r\n    return(\r\n        <> \r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div> :\r\n                aksesMenuData && aksesMenuData.act_update === 1 ?\r\n                <div>\r\n                    <TitlePage title=\"Edit User\" />\r\n                    <div className=\"mb-8\">\r\n                        <ButtonPrimary name=\"kembali\" action={backNavigate}/>\r\n                    </div>\r\n                    <form onSubmit={handdleEdit}>\r\n                        <Select2RoleUser value={roleUser} setValue={setRoleUser} />\r\n                        <FieldText value={name} setValue={setName} isRequire={true} name=\"Nama\" placeholder=\"name\" id=\"name\" isError={isErrorName} keterangan={validName} />\r\n                        <FieldText value={username} setValue={setUserName} isRequire={true} name=\"Username\" placeholder=\"username\" id=\"username\" isError={isErrorUsername} keterangan={validUsername} />\r\n                        <Togle title={\"password\"} value={includePassword} setValue={setIncludePassword} />\r\n                        {\r\n                            includePassword &&\r\n                            <FieldPassword \r\n                                value={password} \r\n                                setValue={setPassword} \r\n                                isRequire={true} \r\n                                isShowPassword={isShowPassword}\r\n                                setisShowPassword={setIsShowPassword}\r\n                                isError={isErrorPassword}\r\n                                keterangan={validPassword} \r\n                                name=\"Password\" \r\n                            />\r\n                        }\r\n                        <ButtonPrimary name=\"Edit\" width=\"w-full\" isLoading={loadingButton} type={\"submit\"} />\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\dashboard\\user\\page.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\login\\layout.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\login\\page.js",["403"],[],"\"use client\"\r\nimport ButtonAllert from \"@/components/buttonAllert\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport {FieldPassword} from \"@/components/fieldPassword\"\r\nimport Image from \"next/image\"\r\nimport login from \"../api/login\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport \"./login.css\"\r\nimport React from \"react\"\r\n\r\nexport default function Login() {\r\n    const router = useRouter();\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [isShowPassword, setisShowPassword] = useState(false);\r\n    const [isError, setIsError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const showText = () => {\r\n        console.log(\"hello\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')) {\r\n          router.replace(\"/dashboard\")\r\n        } else {\r\n          router.replace(\"/login\")\r\n        }\r\n      },[])\r\n\r\n    const fetchLogin = async (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        setIsError(\"\");\r\n        try {\r\n            const payload = {\r\n                username: name,\r\n                password: password,\r\n            }\r\n            const result = await login(payload);\r\n            if(result) {\r\n                localStorage.setItem(\"token\", result)\r\n                router.replace('/');\r\n            }\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            setIsError(\"Username atau password anda salah\")\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"center-login\">\r\n                <div className=\"p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700\">\r\n                    <div className=\"flex items-center\">\r\n                        <Image alt=\"cmm apparel\" src={\"/logo/logoblack.png\"} width={100} height={100} />\r\n                        <span className=\"font-semibold\" >Portal CMS</span>\r\n                    </div>\r\n                    {\r\n                        isError && \r\n                        <div className=\"p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400\" role=\"alert\">\r\n                            <span className=\"font-medium\">Peringatan!</span> {isError}\r\n                        </div>\r\n                    }\r\n                    <form onSubmit={fetchLogin} >\r\n                        <FieldText\r\n                            name=\"Username\"\r\n                            id=\"username\"\r\n                            isRequire={true}\r\n                            placeholder=\"username\" \r\n                            value={name} \r\n                            setValue={setName} />\r\n                        <FieldPassword\r\n                            name=\"Password\"\r\n                            id=\"password\"\r\n                            placeholder=\"password123456\" \r\n                            isRequire={true}\r\n                            value={password} \r\n                            setValue={setpassword} \r\n                            isShowPassword={isShowPassword} \r\n                            setisShowPassword={setisShowPassword} \r\n                        />\r\n                        <ButtonPrimary isLoading={isLoading}  name=\"Login\" width=\"w-full\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\buttonAllert.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\buttonEdit.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\buttonPrimary.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\Carousel.js",["404","405","406","407","408","409"],[],"'use client';\r\n\r\nimport { Carousel } from 'flowbite-react';\r\nimport SpinnerLoading from \"@/components/spinner\";\r\n\r\nexport default function DefaultCarousel({item, loading}) {\r\n  return (\r\n    <>\r\n      {\r\n        item ? \r\n        <div id=\"default-carousel\" className=\"h-56 md:h-96\" data-carousel=\"slide\">\r\n          {\r\n            loading ? \r\n            <SpinnerLoading />\r\n            :\r\n              <Carousel slide={false}  >\r\n                {\r\n                  item.map((item, index) => \r\n                    <img\r\n                    key={index}\r\n                    alt=\"...\"\r\n                    src={item.gambar}\r\n                    />\r\n                    )\r\n                }\r\n              </Carousel>\r\n          }\r\n        </div>\r\n        :\r\n        <div id=\"default-carousel\" class=\"relative h-56 md:h-96\" data-carousel=\"slide\">\r\n          <Carousel slide={false}  >\r\n            <div className=''>\r\n              <img\r\n                alt=\"...\"\r\n                src=\"https://images.tokopedia.net/img/cache/1208/NsjrJu/2023/9/27/c20e55c5-3024-4676-b593-c5f903403143.jpg.webp?ect=4g\"\r\n              />\r\n              <span>takin</span>\r\n            </div>\r\n            <img\r\n              alt=\"...\"\r\n              src=\"https://flowbite.com/docs/images/carousel/carousel-2.svg\"\r\n            />\r\n            <img\r\n              alt=\"...\"\r\n              src=\"https://flowbite.com/docs/images/carousel/carousel-3.svg\"\r\n            />\r\n            <img\r\n              alt=\"...\"\r\n              src=\"https://flowbite.com/docs/images/carousel/carousel-4.svg\"\r\n            />\r\n            <img\r\n              alt=\"...\"\r\n              src=\"https://flowbite.com/docs/images/carousel/carousel-5.svg\"\r\n            />\r\n          </Carousel>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\checkBox.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldNumber.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldPassword.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldRupiah.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldTanggal.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldText.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fieldTextArea.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\fileInput.js",["410"],[],"'use client'\r\n\r\nexport default function FileInput({handleImageChange, imagePreview}) {\r\n    return (\r\n        <div className=\"flex items-center justify-center w-full\">\r\n            <label htmlFor=\"dropzone-file\" className=\"flex flex-col items-center justify-center w-full h-56 md:h-96 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\">\r\n                {\r\n                    imagePreview ?\r\n                    <div id=\"default-carousel\" className=\"w-full\" data-carousel=\"slide\">\r\n                        <div className=\"relative h-56 overflow-hidden rounded-lg md:h-96\">\r\n                            <div className=\"\" data-carousel-item>\r\n                                <img className=\"absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 \" src={imagePreview} alt=\"Selected Image\" />\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                    :\r\n                    <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\r\n                        <svg className=\"w-8 h-8 mb-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 16\">\r\n                            <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2\"/>\r\n                        </svg>\r\n                        <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\"><span className=\"font-semibold\">Click to upload</span> or drag and drop</p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">SVG, PNG, JPG or GIF (MAX. 1208x302px)</p>\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    onChange={handleImageChange} \r\n                    id=\"dropzone-file\" \r\n                    type=\"file\" \r\n                    className=\"hidden\" \r\n                    accept=\"image/*\"\r\n                />\r\n            </label>\r\n        </div> \r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\formDetailProduk.js",["411","412"],[],"'use client'\r\n\r\nimport { Carousel } from 'flowbite-react';\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport LabelData from \"@/components/labelData\"\r\nimport { useEffect, useState } from 'react';\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nexport default function FormDetailProduk({\r\n    name=\"-\",\r\n    barcode=\"-\",\r\n    harga=\"0\",\r\n    categoriName=\"-\",\r\n    subKategoriName=\"-\",\r\n    deskripsi=\"-\",\r\n    color= \"-\",\r\n    type = \"-\",\r\n    jenis_bahan =\"-\",\r\n    link_shoope =\"-\",\r\n    sale,\r\n    start_sale,\r\n    end_sale,\r\n    status,\r\n    gambar = [],\r\n    handleChangeForm,\r\n}) {\r\n    const [selectedPic, setSelectedPic] = useState({})\r\n    const [indexDefault, setIndecDefault] = useState(0)\r\n\r\n    const handlePicSelected = (index) => {\r\n        const arrPic = [...gambar]\r\n        const obj = arrPic[index]\r\n        console.log(obj)\r\n        setSelectedPic(obj)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const arrPic = [...gambar]\r\n        const obj = arrPic[0]\r\n        setSelectedPic(obj)\r\n    },[gambar])\r\n    return(\r\n        <div className='flex flex-col flex-wrap md:flex-row md:gap-4 w-full '>\r\n            {/* galery picture */}\r\n            { gambar.length ? \r\n                <div className='md:w-1/2 flex flex-col items-center'>\r\n                    <div id=\"default-carousel\" className=\"h-96 w-80 p-4 bg-slate-300 rounded-lg\" data-carousel=\"slide\">\r\n                        <img\r\n                        alt=\"\"\r\n                        src={selectedPic}\r\n                        />\r\n                    </div>\r\n                    <div className={`${gambar.length ? \"p-4 bg-gray-400 rounded-lg my-6\" : \"hidden\"}`}>\r\n                        <ol className=\"flex flex-col justify-center md:flex-row\">\r\n                            {[...gambar].map((f, i) => (\r\n                                <li  key={i} className=\"block p-1 w-1/ h-full sm:w-1/3 md:w-1/4 lg:w-1/6 xl:w-1/8\">\r\n                                    <img onClick={() => handlePicSelected(i)} alt=\"upload preview\" src={f} className=\"img-preview w-full h-full sticky object-cover rounded-md bg-fixed\" />\r\n                                </li>\r\n                            ))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n            {/* end galery picture */}\r\n            {/* form detail */}\r\n            <div className='flex flex-col max-w-md flex-wrap'>\r\n                <LabelData title={\"Nama\"} value={name} />\r\n                <LabelData title={\"Barcode\"} value={barcode} />\r\n                <LabelData title={\"Harga\"} value={harga} />\r\n                <LabelData title={\"Kategori\"} value={categoriName} />\r\n                <LabelData title={\"Sub Kategori\"} value={subKategoriName} />\r\n                <LabelData title={\"Deskripsi\"} value={deskripsi} />\r\n                <LabelData title={\"Warna\"} value={color} />\r\n                <LabelData title={\"Tipe\"} value={type} />\r\n                <LabelData title={\"Jenis Bahan\"} value={jenis_bahan} />\r\n                <LabelData title={\"Link Shoope\"} value={link_shoope} />\r\n                <LabelData title={\"Sale\"} value={sale} />\r\n                <LabelData title={\"Start Sale\"} value={start_sale} />\r\n                {/* <LabelData title={\"End Sale\"} value={end_sale} /> */}\r\n                <LabelData title={\"Status Barang\"} value={status ? \"Ya\" : \"Tidak\"} />\r\n                <div>\r\n                    <ButtonPrimary type={\"button\"} name='Edit' action={handleChangeForm}  />\r\n                </div>\r\n            </div>\r\n            {/* end form detail */}\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\formEditProduk.js",["413","414","415"],[],"'use client'\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport {create, editProduk} from \"@/app/api/produk\"\r\nimport {createGambarProduk ,deleteGambar} from \"@/app/api/gambarProduk\"\r\nimport handleChangeRupiah from \"@/helpers/handleChangRupiah\"\r\nimport {getSize} from \"@/app/api/size\"\r\nimport normalizeBayar from \"@/helpers/normalizeBayar\"\r\nimport { FieldText } from \"@/components/fieldText\"\r\nimport Togle from \"@/components/togle\"\r\nimport SizeFormEdit from \"@/components/sizeFormEdit\"\r\nimport FieldTanggal  from \"@/components/fieldTanggal\"\r\nimport { FieldTextArea } from \"@/components/fieldTextArea\"\r\nimport {FieldRupiah} from \"@/components/fieldRupiah\"\r\nimport {Select2Kategori} from \"@/components/select2Kategori\"\r\nimport {Select2SubKategori} from \"@/components/select2SubKategori\"\r\nimport MultiplePicForm from \"@/components/multiplePicForm\";\r\nimport {ButtonPrimary} from \"@/components/buttonPrimary\"\r\nimport TitlePage from \"@/components/titlePage\";\r\nimport { useRouter } from \"next/navigation\"\r\nimport SpinnerLoading from \"@/components/spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport validator from 'validator';\r\nimport dateFormat from \"dateformat\"\r\n\r\nexport default function FormEditProduk({getProduk, aksesMenuData, idProduk}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [harga, setHarga] = useState(\"\");\r\n    const [kategori, setKategori] = useState({value:{id: 0, name: \"silahkan Memilih Kategori\"}, label:\"silahkan Memilih Kategori\"})\r\n    const [subCategori, setSubCategori] = useState({value:{id: 0, name: \"silahkan Memilih Sub Kategori\"}, label:\"silahkan Memilih Sub Kategori\"});\r\n    const [warna, setWarna] = useState(\"\");\r\n    const [deskirpsi, setDeskripsi] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [jenisBahan, setJenisBahan] = useState(\"\");\r\n    const [linkShoope, setLinkShoope] = useState(\"\");\r\n    const [gambar, setGambar] = useState([])\r\n    const [images, setImages] = useState([]);\r\n    const [sale, setSale] = useState(0)\r\n    const [startSale, setStartSale] = useState(\"\")\r\n    const [endSale, setEndSale] = useState(\"\")\r\n    const [status, setStatus] = useState(false);\r\n    const [loadingPage, setLoadingPage] = useState(false)\r\n    const [sizes, setSizes] = useState([]);\r\n\r\n    const [fileLimit, setFileLimit] = useState(false);\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [validName, setValidName] = useState(null)\r\n    const [validHarga, setValidHarga] = useState(null)\r\n    const [validKategori, setValidKategori] = useState(null)\r\n    const [validSubKategori, setValidSubKategori] = useState(null)\r\n    const [validSize, setValidSize] = useState(null)\r\n    const [validGambar, setValidGambar] = useState(null)\r\n    const [validSale, setValidSale] = useState(null)\r\n    const [isErrorName, setIsErrorName] = useState(false)\r\n    const [isErrorHarga, setIsErrorHarga] = useState(false)\r\n    const [isErrorKategori, setIsErrorKategori] = useState(false)\r\n    const [isErrorSubKategori, setIsErrorSubKategori] = useState(false)\r\n    const [isErrorSize, setIsErrorSize] = useState(false)\r\n    const [isErrorSale, setIsErrorSale] = useState(false)\r\n    const [isErrorGambar, setIsErrorGambar] = useState(false)\r\n\r\n    const [reloadGambar, setReloadGambar] = useState(false)\r\n    const [reloadSize, setReloadSize] = useState(false)\r\n    const [loadingGambar, setLoadingGambar] = useState(false)\r\n    const [loadingSize, setLoaodingSize] = useState(false)\r\n    \r\n\r\n    useEffect(() => {\r\n        if(getProduk) {\r\n            setName(getProduk.name)\r\n            setBarcode(getProduk.barcode)\r\n            setHarga(handleChangeRupiah(getProduk.harga))\r\n            setKategori({value:{id: getProduk.id_categori, name: getProduk.categoriName}, label:getProduk.categoriName})\r\n            setSubCategori({value:{id: getProduk.id_sub_categori, name: getProduk.subKategoriName}, label:getProduk.subKategoriName})\r\n            setDeskripsi(getProduk.deskripsi)\r\n            setWarna(getProduk.color)\r\n            setType(getProduk.type)\r\n            setJenisBahan(getProduk.jenis_bahan)\r\n            setLinkShoope(getProduk.link_shoope)\r\n            setSale(getProduk.sale)\r\n            setStartSale((getProduk.start_sale === \"0000-00-00\") ||  (getProduk.start_sale !== \"\") ? \"\" : dateFormat(getProduk.start_sale, \"yyyy-mm-dd\") )\r\n            // setStartSale(getProduk.start_sale)\r\n            setEndSale((getProduk[\"end_sale\"] === \"0000-00-00\") || (getProduk[\"end_sale\"] === \"\") ? \"\" : dateFormat(getProduk[\"end_sale\"], \"yyyy-mm-dd\"))\r\n            // setEndSale(getProduk.end_sale)\r\n            if(getProduk.status === 1) {\r\n                setStatus(true)\r\n            } else {\r\n                setStatus(false)\r\n            }\r\n            const previewImage = [...images]\r\n            if(getProduk.gambar.length) {\r\n                setGambar(getProduk.gambar)\r\n                getProduk.gambar.some(item => {\r\n                    previewImage.push(item)\r\n                });\r\n            }\r\n            setImages(previewImage)\r\n        }\r\n    },[])\r\n\r\n\r\n    const handleDeletePicture = (index) => {\r\n        setLoadingButton(true)\r\n        console.log(\"handle picture edit delete\", index)\r\n        const preview = [...images];\r\n        const itemGambar = preview[index]\r\n        MySwal.fire({\r\n            title: `Apakah anda yakin ingin menghapus gambar ini ?`,\r\n            text: \"Anda tidak bisa mengembalikan data ini!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Ya, Hapus!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const payload = {\r\n                    id: itemGambar.id,\r\n                    idProduk: idProduk\r\n                }\r\n                deleteGambar(payload)\r\n                .then(() => {\r\n                  preview.splice(index, 1)\r\n                  setImages(preview)\r\n                  MySwal.fire(\r\n                      'Deleted!',\r\n                      'Gambar berhasil di hapus',\r\n                      'success'\r\n                  )\r\n                  setLoadingButton(false)\r\n              }, err => {\r\n                setLoadingButton(false)\r\n                  MySwal.fire({\r\n                      icon: \"error\",\r\n                      title: err ? err : \"Gagal Menghapus Gambar\",\r\n                  });\r\n              })\r\n            }\r\n        }) \r\n       \r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        const chosenFiles = Array.prototype.slice.call(e.target.files)\r\n        handleUploadFiles(chosenFiles);\r\n    };\r\n\r\n    const handleUploadFiles = async (files) => {\r\n        setLoadingButton(true)\r\n        const uploaded = [];\r\n        files.some((file) => {\r\n            if (uploaded.findIndex((f) => f.name === file.name) === -1) {\r\n                uploaded.push(file);\r\n                // preview.push(URL.createObjectURL(file))\r\n            }\r\n        })\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('idProduk', idProduk);\r\n            uploaded.forEach((image_file) => {\r\n                formData.append('gambar[]', image_file);\r\n                // formData.append('file[]', image_file);\r\n            })\r\n            const sendImages = await createGambarProduk(formData)\r\n            if(sendImages.data.length) {\r\n                const preview = [...images];\r\n                sendImages.data.forEach(item => {\r\n                    preview.push(item)\r\n                })\r\n                setImages(preview)\r\n                MySwal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Berhasil Menambahkan Gambar\", \r\n                })\r\n            }\r\n            setLoadingButton(false)\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleEditProduk = async (event) => {\r\n        try {\r\n            event.preventDefault()\r\n            setLoadingButton(true)\r\n            setIsErrorName(false)\r\n            setIsErrorHarga(false)\r\n            setIsErrorKategori(false)\r\n            setIsErrorSubKategori(false)\r\n            setIsErrorSize(false)\r\n            setIsErrorGambar(false)\r\n            if (!validator.isLength(name, { min: 3 })) {\r\n                setValidName(\"name minimal panjang 3 huruf\");\r\n                setLoadingButton(false)\r\n                setIsErrorName(true)\r\n            } else if(kategori.value.id === 0) {\r\n                setValidKategori(\"Anda Harus Memilih Kategori\")\r\n                setIsErrorKategori(true)\r\n                setLoadingButton(false)\r\n            } else if(subCategori.value.id === 0) {\r\n                setValidSubKategori(\"Anda Harus Memilih Sub Kategori\")\r\n                setIsErrorSubKategori(true)\r\n                setLoadingButton(false)\r\n            } else if(!sizes.length) {\r\n                setValidSize(\"Anda harus menambahkan size terlebih dahulu\")\r\n                setIsErrorSize(true)\r\n                setLoadingButton(false)\r\n            } else if(gambar.length < 1) {\r\n                setValidGambar(\"Anda Harus Memasukkan Gambar Min:1\");\r\n                setLoadingButton(false)\r\n                setIsErrorGambar(true)\r\n            } \r\n            else if(sale && (!startSale || !endSale)) {\r\n                setValidSale(\"Tanggal Sale Harus Di Isi Terlebih Dahulu\")\r\n                setLoadingButton(false)\r\n                setIsErrorSale(true)\r\n            }   \r\n            else {\r\n                const formData = new FormData();\r\n                formData.append('id', idProduk);\r\n                formData.append('name', name);\r\n                formData.append(\"harga\", normalizeBayar(harga))\r\n                formData.append(\"idCategori\", kategori.value.id)\r\n                formData.append(\"idSubCategori\", subCategori.value.id)\r\n                formData.append(\"deskripsi\", deskirpsi)\r\n                formData.append(\"color\", warna)\r\n                formData.append(\"type\", type)\r\n                formData.append(\"jenisBahan\", jenisBahan)\r\n                formData.append(\"linkShoope\", linkShoope)\r\n                formData.append(\"sale\", sale ? 1 : 0)\r\n                formData.append(\"status\", status ? 1 : 0)\r\n                if(startSale) {\r\n                    formData.append(\"startSale\", dateFormat(startSale, \"isoDate\"))\r\n                } else {\r\n                    formData.append(\"startsale\", startSale)\r\n                }\r\n                if(endSale) {\r\n                    formData.append(\"endSale\", dateFormat(endSale, \"isoDate\"))\r\n                } else {\r\n                    formData.append(\"endSale\", endSale)\r\n                }\r\n\r\n                // gambar.forEach((image_file) => {\r\n                //     formData.append('gambar[]', image_file);\r\n                //     // formData.append('file[]', image_file);\r\n                // })\r\n\r\n                const editProdukResult = await editProduk(formData)\r\n                if(editProdukResult.status) {\r\n                    MySwal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Berhasil Mengubah Produk\", \r\n                    })\r\n                }\r\n                setLoadingButton(false)\r\n\r\n            }\r\n        } catch (error) {\r\n            setLoadingButton(false)\r\n            console.log(error)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const handleGetSize = async () => {\r\n        try {\r\n            setLoaodingSize(true)\r\n            const getNewSize = await getSize(idProduk) \r\n            if(getNewSize) {\r\n                setSizes(getNewSize)\r\n            }\r\n            setLoaodingSize(false)\r\n        } catch (error) {\r\n            setLoaodingSize(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: error,\r\n            });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        handleGetSize()\r\n    }, [reloadSize])\r\n\r\n\r\n    const backNavigate = () => {\r\n        router.replace('/dashboard/produk')\r\n    }\r\n\r\n    return(\r\n        <> \r\n            <TitlePage title=\"Edit Produk\" />\r\n            <div className=\"mb-8\">\r\n                <ButtonPrimary name=\"kembali\" action={backNavigate}/>\r\n            </div>\r\n            \r\n            {\r\n                loadingPage ?\r\n                <div className=\"flex w-full h-full items-center justify-center\">\r\n                    <SpinnerLoading /> \r\n                </div> :\r\n                aksesMenuData && aksesMenuData.act_update === 1 ?\r\n                <div>\r\n                    <form onSubmit={handleEditProduk} className=\"w-full\">\r\n                        <div className=\"w-full flex flex-col md:flex-row md:gap-6\">\r\n                            {/* form detail */}\r\n                            <div className=\"w-full\">\r\n                                <FieldText \r\n                                    value={name} \r\n                                    setValue={setName} \r\n                                    isRequire={true} \r\n                                    name=\"Nama\" \r\n                                    placeholder=\"name\" \r\n                                    id=\"name\" \r\n                                    isError={isErrorName} \r\n                                    keterangan={validName} \r\n                                />\r\n                                <FieldRupiah \r\n                                    title={\"Harga\"} \r\n                                    value={harga}\r\n                                    setValue={setHarga}\r\n                                    isRequire={true} \r\n                                    isError={isErrorHarga}\r\n                                    keterangan={validHarga}\r\n                                />\r\n                                <Select2Kategori \r\n                                    value={kategori} \r\n                                    setValue={setKategori} \r\n                                    isError={isErrorKategori}\r\n                                    keterangan={validKategori}\r\n                                />\r\n                                {\r\n                                    kategori.value.id !== 0 && \r\n                                    <Select2SubKategori \r\n                                        idKategori={kategori.value.id} \r\n                                        value={subCategori} \r\n                                        setValue={setSubCategori} \r\n                                        isError={isErrorSubKategori}\r\n                                        keterangan={validSubKategori}\r\n                                        /> \r\n                                }\r\n                                <FieldText \r\n                                    value={warna} \r\n                                    setValue={setWarna} \r\n                                    name=\"Warna\"\r\n                                    id=\"warna\"\r\n                                    placeholder=\"ex: hitam, jika tidak ada masukkan '-' \"\r\n                                    isRequire={true}  \r\n                                />\r\n                                <FieldTextArea \r\n                                    value={deskirpsi} \r\n                                    setValue={setDeskripsi} \r\n                                    name=\"Deskripsi\"\r\n                                    id=\"deskripsi\"\r\n                                    isRequire={true} \r\n                                    placeholder=\"jika tidak ada masukkan '-'\" \r\n                                    \r\n                                />\r\n                                <FieldText \r\n                                    value={type} \r\n                                    setValue={setType} \r\n                                    name=\"Type\"\r\n                                    id=\"type\" \r\n                                    isRequire={true} \r\n                                    placeholder=\"jika tidak ada masukkan '-'\"\r\n                                />\r\n                                <FieldText \r\n                                    value={jenisBahan} \r\n                                    setValue={setJenisBahan} \r\n                                    name=\"Jenis Bahan\"\r\n                                    id=\"jenis bahan\"\r\n                                    placeholder=\"ex: Katun, jika tidak ada masukkan '-'\"\r\n                                    isRequire={true} \r\n                                />\r\n                                <FieldText \r\n                                    value={linkShoope} \r\n                                    setValue={setLinkShoope} \r\n                                    name=\"Link Shoope\"\r\n                                    id=\"link shoope\"\r\n                                    isRequire={true} \r\n                                />\r\n                                <Togle \r\n                                    value={sale}\r\n                                    setValue={setSale}\r\n                                    title={\"Aktifkan Sale\"}\r\n                                    key={\"aktifkanSale\"}\r\n                                />\r\n                                {\r\n                                    sale ?\r\n                                    <>\r\n                                        <FieldTanggal  \r\n                                            value={startSale}\r\n                                            setValue={setStartSale}\r\n                                            name={\"Tanggal Mulai Sale\"}\r\n                                            isRequire={true}\r\n                                        />\r\n                                        <FieldTanggal  \r\n                                            value={endSale}\r\n                                            setValue={setEndSale}\r\n                                            name={\"Tanggal Berakhir Sale\"}\r\n                                            isRequire={true}\r\n                                        />\r\n                                        {\r\n                                            isErrorSale &&\r\n                                            <p className=\"text-sm text-red-500 mb-2\">{validSale}</p>\r\n                                        }\r\n                                    </>\r\n                                    :null\r\n                                }\r\n                            </div>\r\n                            {/* form pick picture */}\r\n                            <div className=\"w-full\">\r\n                                <SizeFormEdit \r\n                                    idProduk={idProduk}\r\n                                    sizes={sizes}\r\n                                    isError={isErrorSize}\r\n                                    keterangan={validSize}\r\n                                    reloadSize={reloadSize}\r\n                                    setReloadSize={setReloadSize}\r\n                                    loadingSize = {loadingSize}\r\n                                    loadingButton={loadingButton}\r\n                                    setLoadingButton = {setLoadingButton}\r\n                                />\r\n                                <MultiplePicForm state={gambar} handleState={handleImageChange} isError={isErrorGambar} keterangan={validGambar} />\r\n                                <div className={`${images.length ? \"p-4 bg-gray-400 rounded-lg my-6\" : \"hidden\"}`}>\r\n                                    <ol className=\"flex flex-col md:flex-row\">\r\n                                        {[...images].map((f, i) => (\r\n                                            <li  key={i} className=\"block p-1 w-1/ h-full sm:w-1/3 md:w-1/4 lg:w-1/6 xl:w-1/8\">\r\n                                                <img onClick={() => handleDeletePicture(i)} alt=\"upload preview\" src={f.path} className=\"img-preview w-full h-full sticky object-cover rounded-md bg-fixed\" />\r\n                                            </li>\r\n                                        ))}\r\n                                    </ol>\r\n                                </div>\r\n                                <Togle \r\n                                    value={status}\r\n                                    setValue={setStatus}\r\n                                    title={\"Status Produk\"}\r\n                                    key={\"akrifProduk\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <ButtonPrimary name=\"Update\" width=\"w-full\" isLoading={loadingButton} type={\"submit\"} />\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div className=\"flex items-center justify-center\">\r\n                    <span>Anda tidak memiliki akses</span>\r\n                </div> \r\n            }\r\n        </> \r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\galery.js",["416"],[],"'use client'\r\nimport { TiDelete } from \"react-icons/ti\";\r\nexport default function Galery({item, deleteItem}) {\r\n    return(\r\n        <div class=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n            {\r\n                item && item.map((item, index) => \r\n                    <div className=\"relative\" key={index}>\r\n                        <div onClick={() => deleteItem(item.id)} className=\"cursor-pointer absolute z-30 text-4xl text-red-700\">\r\n                            <TiDelete  />\r\n                        </div>\r\n                        <img className=\"h-auto max-w-full\" src={item.gambar} alt=\"\"/>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\labelData.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\modalCreateRoleUser.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\modalEditRoleUser.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\modalEditsize.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\multiplePicForm.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\navbar.js",["417"],[],"'use client'\r\nimport Link from \"next/link\"\r\nimport {useEffect, useState} from \"react\" \r\nimport Image from \"next/image\";\r\nimport {menu} from \"../app/api/menu\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nexport default function Navbar() {\r\n    const route = useRouter()\r\n    const [isShow, setisShow] = useState(false);\r\n    const [dataMenu, setDataMenu] = useState([]); \r\n     \r\n    const fetchMenu = async () => {\r\n        try {\r\n           const fetchMenu = await menu();\r\n           if(fetchMenu) {\r\n            console.log(fetchMenu)\r\n               setDataMenu([...fetchMenu]);\r\n               localStorage.setItem('menu', JSON.stringify(fetchMenu))\r\n               console.log(dataMenu)\r\n           }\r\n\r\n        }\r\n        catch(error) {\r\n            const data = error.response.data\r\n            if(error.response.data === \"Unauthorized\") {\r\n                localStorage.clear();\r\n                route.replace('/login')\r\n            } else {\r\n                console.log(data)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleLogOut = () => {\r\n        localStorage.clear()\r\n        route.replace('/login')\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMenu()\r\n    }, [])\r\n    return( \r\n        <>\r\n            \r\n        <button data-drawer-target=\"default-sidebar\" data-drawer-toggle=\"default-sidebar\" aria-controls=\"default-sidebar\" type=\"button\" className=\"inline-flex items-center p-2 mt-2 ml-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\">\r\n            <span className=\"sr-only\">Open sidebar</span>\r\n            <svg className=\"w-6 h-6\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path clipRule=\"evenodd\" fillRule=\"evenodd\" d=\"M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z\"></path>\r\n            </svg>\r\n        </button>\r\n\r\n        <aside id=\"default-sidebar\" className=\"fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full sm:translate-x-0\" aria-label=\"Sidebar\">\r\n            <div className=\"h-full px-3 py-4 overflow-y-auto bg-gray-50 dark:bg-gray-800\">\r\n                <ul className=\"space-y-2 font-medium\">\r\n                    {\r\n                        dataMenu.length > 0 && dataMenu.map((menu, index) =>\r\n                            <li key={index}>\r\n                                <Link href={menu.link} className=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\r\n                                {/* add Logo here */}\r\n                                    <span className=\"ml-3\">{menu.name}</span>\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                    <li className=\"cursor-pointer\" onClick={handleLogOut}>\r\n                        <div className=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\r\n                            <span className=\"ml-3\">Log Out</span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n\r\n        \r\n        </>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\pagination.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\searchForm.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\select2Kategori.js",["418"],[],"'use client'\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Select from \"react-select\"\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {getIndex} from \"../app/api/kategori\"\r\n\r\n\r\nexport function Select2Kategori ({value, setValue, isError, keterangan}) {\r\n    const [data, setData] = useState([])\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const loadOption = async () => {\r\n        try{\r\n            const arr = []\r\n            const response = await getIndex()\r\n            console.log(response)\r\n            if(response) {\r\n                response.map((item) => {\r\n                    const payload = {\r\n                        value: {\r\n                            id: item[\"id\"],\r\n                            name: item[\"name\"],\r\n                        },\r\n                        label: `${item[\"name\"]}`,\r\n                    }\r\n                    arr.push(payload)\r\n                });\r\n                setData(arr);\r\n            } else {\r\n                const defaultData = [{\r\n                    value: {\r\n                        id: 0,\r\n                        name: \"silahkan Memilih Kategori\"\r\n                    }, \r\n                    label:\"silahkan Memilih Kategori\"\r\n                }]\r\n                setData(defaultData);\r\n            }\r\n        }\r\n        catch(err) {\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: err.message,\r\n            });\r\n        }\r\n    };\r\n    \r\n    \r\n    useEffect( () => {\r\n      loadOption()\r\n    },[])\r\n\r\n    const handleOption = (value) => {\r\n        setValue(value)\r\n    }\r\n    return (\r\n        <div className=\"mb-6\">\r\n            <label className=\" block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n                Kategori\r\n            </label>\r\n            <Select \r\n                options={data}\r\n                value={value}\r\n                className=\"basic-single\"\r\n                onChange={handleOption}\r\n                isLoading={!data.length}\r\n                required\r\n            />\r\n            {\r\n                isError &&\r\n                <p className=\"mt-2 text-sm text-red-500\">{keterangan}</p>\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\select2RoleUser.js",["419"],[],"'use client'\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Select from \"react-select\"\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getRoleUser } from '../app/api/roleUser';\r\n\r\n\r\nexport function Select2RoleUser ({value, setValue}) {\r\n    const [data, setData] = useState([])\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const loadOption = async () => {\r\n        try{\r\n            const arr = []\r\n            const response = await getRoleUser()\r\n            console.log(response)\r\n            if(response) {\r\n                response.map((item) => {\r\n                    const payload = {\r\n                        value: {\r\n                            id: item[\"id\"],\r\n                            name: item[\"name\"],\r\n                        },\r\n                        label: `${item[\"name\"]}`,\r\n                    }\r\n                    arr.push(payload)\r\n                });\r\n                setData(arr);\r\n            } else {\r\n                const defaultData = [{\r\n                    value: {\r\n                        id: 0,\r\n                        name: \"silahkan Memilih role user\"\r\n                    }, \r\n                    label:\"silahkan Memilih role user\"\r\n                }]\r\n                setData(defaultData);\r\n            }\r\n        }\r\n        catch(err) {\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: err.message,\r\n            });\r\n        }\r\n    };\r\n    \r\n    \r\n    useEffect( () => {\r\n      loadOption()\r\n    },[])\r\n\r\n    const handleOption = (value) => {\r\n        setValue(value)\r\n    }\r\n    return (\r\n        <div className=\"mb-6\">\r\n            <label className=\" block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n                Role user\r\n            </label>\r\n            <Select \r\n                options={data}\r\n                value={value}\r\n                className=\"basic-single\"\r\n                onChange={handleOption}\r\n                isLoading={!data.length}\r\n                required\r\n            />\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\select2SubKategori.js",["420"],[],"'use client'\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Select from \"react-select\"\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {getIndex} from \"../app/api/subKategori\"\r\n\r\n\r\nexport function Select2SubKategori ({idKategori ,value, setValue, isError, keterangan}) {\r\n    const [data, setData] = useState([])\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const loadOption = async () => {\r\n        try{\r\n            const arr = []\r\n            const response = await getIndex(idKategori)\r\n            if(response) {\r\n                response.map((item) => {\r\n                    const payload = {\r\n                        value: {\r\n                            id: item[\"id\"],\r\n                            name: item[\"name\"],\r\n                        },\r\n                        label: `${item[\"name\"]}`,\r\n                    }\r\n                    arr.push(payload)\r\n                });\r\n                setData(arr);\r\n            } else {\r\n                const defaultData = [{\r\n                    value: {\r\n                        id: 0,\r\n                        name: \"Belum Ada Sub Kategori, Silahkan Buat Terlebih Dahulu\"\r\n                    }, \r\n                    label:\"Belum Ada Sub Kategori, Silahkan Buat Terlebih Dahulu\"\r\n                }]\r\n                setData(defaultData);\r\n            }\r\n        }\r\n        catch(err) {\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: err.message,\r\n            });\r\n        }\r\n    };\r\n    \r\n    \r\n    useEffect( () => {\r\n      loadOption()\r\n    },[])\r\n\r\n    const handleOption = (value) => {\r\n        setValue(value)\r\n    }\r\n    return (\r\n        <div className=\"mb-6\">\r\n            <label className=\" block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n                Sub Kategori\r\n            </label>\r\n            <Select \r\n                options={data}\r\n                value={value}\r\n                className=\"basic-single\"\r\n                onChange={handleOption}\r\n                isLoading={!data.length}\r\n                required\r\n            />\r\n            {\r\n                isError &&\r\n                <p className=\"mt-2 text-sm text-red-500\">{keterangan}</p>\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\selectRow.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\sizeForm.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\sizeFormEdit.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\spinner.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableKategori.js",["421"],[],"\"use client\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { FaRegTrashCan, FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport SearchForm from \"@/components/searchForm\"\r\nimport { getAll, search, page, deleteItem } from \"@/app/api/kategori\";\r\nimport {SelectRow} from \"@/components/selectRow\"; \r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport SpinnerLoading from \"./spinner\";\r\nimport Pagination from \"@/components/pagination\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nexport default function TableKategori({aksesEdit = 0, aksesDelete = 0}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [data, setData] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [searchData, setSearchData] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalData, setTotalData] = useState(0)\r\n    const [firstPage, setFirstPage] = useState(1)\r\n    const [lastPage, setLastPage] = useState(1)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const handleDelete = (id, name) => {\r\n        MySwal.fire({\r\n            title: `Apakah anda yakin ingin menghapus data ini dengan nama \"${id, name}\" ?`,\r\n            text: \"Anda tidak bisa mengembalikan data ini!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Ya, Hapus!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteItem(id)\r\n                .then(() => {\r\n                  setReload(!reload)\r\n                  MySwal.fire(\r\n                      'Deleted!',\r\n                      'Data berhasil di hapus',\r\n                      'success'\r\n                  )\r\n              }, err => {\r\n                  setReload(!reload)\r\n                  MySwal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Gagal Menghapus kategori\",\r\n                  });\r\n              })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        router.replace(`/dashboard/kategori/edit/${id}`)\r\n    }\r\n\r\n    const getAllKategori = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit\r\n            }\r\n            const result = await getAll(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil kategori\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit,\r\n                search: searchData\r\n            }\r\n            const result = await search(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil kategori\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const previousHandle = async () => {\r\n        if(pageNumber !== firstPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber - 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil kategori\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const nextHandle = async () => {\r\n        if(pageNumber !== lastPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber + 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil kategori\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const pageHandle = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            setPageNumber(id)\r\n            const payload = {\r\n                limit,\r\n                search: searchData,\r\n                number: id\r\n            }\r\n            const result = await page(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil kategori\",\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllKategori()\r\n    },[limit, reload])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"w-full overflow-x-auto\">\r\n                {\r\n                    loading ?\r\n                    <div className=\"w-full flex items-center justify-center\">\r\n                        <SpinnerLoading />\r\n                    </div> \r\n                    :\r\n                    <div>\r\n                        <div className=\"flex flex-col gap-6 lg:flex lg:flex-row  lg:justify-between mb-6\">\r\n                            <SelectRow value={limit} setValue={setLimit} id={\"limit\"} />\r\n                            <SearchForm value={searchData} setValue={setSearchData} action={handleSearch} />\r\n                        </div>\r\n                        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px-6 py-3\">\r\n                                        Nama\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3\">\r\n                                        Sub Kategori\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3\">\r\n                                        Aksi\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    data && data.map((item, index) =>\r\n                                        <tr key={index} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                                            <th scope=\"row\" className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                                                {item.name}\r\n                                            </th>\r\n                                            <td className=\"px-6 py-4\">\r\n                                                {item.subCategori ? item.subCategori : \"\"}\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4\">\r\n                                                <div className=\"flex gap-3\">\r\n                                                    {\r\n                                                        aksesEdit === 1 &&\r\n                                                        <FaRegPenToSquare className=\"text-yellow-500 text-xl\" onClick={() => handleEdit(item.id)} />\r\n                                                    }\r\n                                                    {\r\n                                                        aksesDelete === 1 &&\r\n                                                        <FaRegTrashCan className=\"text-red-500 text-xl\" onClick={() => handleDelete(item.id, item.name)} />\r\n                                                    }\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination \r\n                            first={firstPage} \r\n                            last={lastPage} \r\n                            pageNumber={pageNumber} \r\n                            pageHandle={pageHandle} \r\n                            previousHandle={previousHandle} \r\n                            nextHandle={nextHandle}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableProduk.js",["422"],[],"'use client'\r\n\r\nimport handleChangeRupiah from \"../helpers/handleChangRupiah\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaRegTrashCan, FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport SearchForm from \"@/components/searchForm\"\r\nimport { getAllProduk, search, page, deleteProduk } from \"@/app/api/produk\";\r\nimport {SelectRow} from \"@/components/selectRow\"; \r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport SpinnerLoading from \"./spinner\";\r\nimport Pagination from \"@/components/pagination\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nexport default function TableProduk({aksesEdit = 0, aksesDelete = 0}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [data, setData] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [searchData, setSearchData] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalData, setTotalData] = useState(0)\r\n    const [firstPage, setFirstPage] = useState(1)\r\n    const [lastPage, setLastPage] = useState(1)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const handleDelete = (id, name) => {\r\n        MySwal.fire({\r\n            title: `Apakah anda yakin ingin menghapus produk ini dengan nama \"${id, name}\" ?`,\r\n            text: \"Anda tidak bisa mengembalikan produk ini!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteProduk(id)\r\n                .then(() => {\r\n                  setReload(!reload)\r\n                  MySwal.fire(\r\n                      'Deleted!',\r\n                      'Produk berhasil di hapus',\r\n                      'success'\r\n                  )\r\n              }, err => {\r\n                  setReload(!reload)\r\n                  MySwal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Gagal Menghapus produk\",\r\n                  });\r\n              })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const handleDetail = (id) => {\r\n        router.replace(`/dashboard/produk/detail/${id}`)\r\n    }\r\n\r\n    const getProduks = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit\r\n            }\r\n            const result = await getAllProduk(payload)\r\n            console.log(result)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit,\r\n                search: searchData\r\n            }\r\n            const result = await search(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const previousHandle = async () => {\r\n        if(pageNumber !== firstPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber - 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil data produk\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const nextHandle = async () => {\r\n        if(pageNumber !== lastPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber + 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil data produk\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const trueIcon = (status) => {\r\n        return(\r\n            <>\r\n                {\r\n                    status === 1 ?\r\n                    <svg className=\"w-3 h-3 text-green-500\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 12\">\r\n                        <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M1 5.917 5.724 10.5 15 1.5\"/>\r\n                    </svg>\r\n                    :\r\n                    <svg className=\"w-3 h-3 text-red-500\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                        <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n                    </svg>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    const pageHandle = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            setPageNumber(id)\r\n            const payload = {\r\n                limit,\r\n                search: searchData,\r\n                number: id\r\n            }\r\n            const result = await page(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data produk\",\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getProduks()\r\n    },[limit, reload])\r\n return (\r\n    <>   \r\n        <div className=\"w-full overflow-x-auto\">\r\n            {\r\n                loading ?\r\n                <div className=\"w-full flex items-center justify-center\">\r\n                    <SpinnerLoading />\r\n                </div> \r\n                :\r\n                <div>\r\n                    <div className=\"flex flex-col gap-6 lg:flex lg:flex-row  lg:justify-between mb-6\">\r\n                        <SelectRow value={limit} setValue={setLimit} id={\"limit\"} />\r\n                        <SearchForm value={searchData} setValue={setSearchData} action={handleSearch} />\r\n                    </div>\r\n                    <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Name\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Harga\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Kategori\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Sub Kategori\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Size\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Diskon\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Status Produk\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Aksi\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                data && data.map((item, index) =>\r\n                                    <tr key={index} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                                        <th scope=\"row\" className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                                            {item.name}\r\n                                        </th>\r\n                                        <th scope=\"row\" className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                                            {item.harga ? handleChangeRupiah(item.harga) : \"0\"}\r\n                                        </th>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.kategori}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.subKategori}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.size}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            { trueIcon(item.diskon) }\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            { trueIcon(item.statusProduk) }\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            <div className=\"flex gap-3\">\r\n                                                {\r\n                                                    aksesEdit === 1 &&\r\n                                                    <FaRegPenToSquare className=\"text-yellow-500 text-xl\" onClick={() => handleDetail(item.id)} />\r\n                                                }\r\n                                                {\r\n                                                    aksesDelete === 1 &&\r\n                                                    <FaRegTrashCan className=\"text-red-500 text-xl\" onClick={() => handleDelete(item.id, item.name)} />\r\n                                                }\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination \r\n                        first={firstPage} \r\n                        last={lastPage} \r\n                        pageNumber={pageNumber} \r\n                        pageHandle={pageHandle} \r\n                        previousHandle={previousHandle} \r\n                        nextHandle={nextHandle}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    </>\r\n )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableRoleUser.js",["423"],[],"'use client'\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaRegTrashCan, FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport { get, getSelected, edit, page} from \"@/app/api/roleUser\";\r\nimport {SelectRow} from \"@/components/selectRow\"; \r\nimport SearchForm from \"@/components/searchForm\"\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport SpinnerLoading from \"./spinner\";\r\nimport Pagination from \"@/components/pagination\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nexport default function TableRoleUser({aksesEdit = 0, aksesDelete = 0}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [data, setData] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [loading,setLoading] = useState(false)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalData, setTotalData] = useState(0)\r\n    const [firstPage, setFirstPage] = useState(1)\r\n    const [lastPage, setLastPage] = useState(1)\r\n    const [reload, setReload] = useState(false)\r\n    const [searchData, setSearchData] = useState('');\r\n\r\n    const handleEdit = (id) => {\r\n        router.replace(`/dashboard/roleUser/edit/${id}`)\r\n    }\r\n\r\n    const handleGetRoleUser = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit\r\n            }\r\n            const result = await get(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit,\r\n                search: searchData\r\n            }\r\n            const result = await get(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n    }\r\n    const previousHandle = async () => {\r\n        if(pageNumber !== firstPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber - 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil data role user\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const nextHandle = async () => {\r\n        if(pageNumber !== lastPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber + 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil data role user\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const pageHandle = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            setPageNumber(id)\r\n            const payload = {\r\n                limit,\r\n                search: searchData,\r\n                number: id\r\n            }\r\n            const result = await page(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data role user\",\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetRoleUser()\r\n    },[limit, reload])\r\n return (\r\n    <>   \r\n        <div className=\"w-full overflow-x-auto\">\r\n            {\r\n                loading ? \r\n                <div className=\"w-full flex items-center justify-center\">\r\n                    <SpinnerLoading />\r\n                </div> \r\n                :\r\n                <div>\r\n                    <div className=\"flex flex-col gap-6 lg:flex lg:flex-row  lg:justify-between mb-6\">\r\n                        <SelectRow value={limit} setValue={setLimit} id={\"limit\"} />\r\n                        <SearchForm value={searchData} setValue={setSearchData} action={handleSearch} />\r\n                    </div>\r\n                    <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Name\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Menu\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Aksi\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                data && data.map((item, index) =>\r\n                                    <tr key={index} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.name}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.menu}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            <div className=\"flex gap-3\">\r\n                                                {\r\n                                                    aksesEdit === 1 &&\r\n                                                    <FaRegPenToSquare className=\"text-yellow-500 text-xl\" onClick={() => handleEdit(item.id)} />\r\n                                                }\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination\r\n                        first={firstPage} \r\n                        last={lastPage} \r\n                        pageNumber={pageNumber} \r\n                        pageHandle={pageHandle} \r\n                        previousHandle={previousHandle} \r\n                        nextHandle={nextHandle}\r\n                     />\r\n                </div>\r\n            }\r\n        </div>\r\n    </>\r\n )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableSubKategori.js",["424"],[],"\"use client\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { FaRegTrashCan, FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport SearchForm from \"@/components/searchForm\"\r\nimport { getAll, page, search, deleteItem } from \"@/app/api/subKategori\";\r\nimport {SelectRow} from \"@/components/selectRow\"; \r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport SpinnerLoading from \"./spinner\";\r\nimport Pagination from \"@/components/pagination\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nexport default function TableSubKategori({aksesEdit = 0, aksesDelete = 0}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [data, setData] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [searchData, setSearchData] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalData, setTotalData] = useState(0)\r\n    const [firstPage, setFirstPage] = useState(1)\r\n    const [lastPage, setLastPage] = useState(1)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const handleDelete = (id, name) => {\r\n        MySwal.fire({\r\n            title: `Apakah anda yakin ingin menghapus data ini dengan nama \"${id, name}\" ?`,\r\n            text: \"Anda tidak bisa mengembalikan data ini!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Ya, Hapus!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteItem(id)\r\n                .then(() => {\r\n                  setReload(!reload)\r\n                  MySwal.fire(\r\n                      'Deleted!',\r\n                      'Data berhasil di hapus',\r\n                      'success'\r\n                  )\r\n              }, err => {\r\n                  setReload(!reload)\r\n                  MySwal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Gagal Menghapus kategori\",\r\n                  });\r\n              })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        router.replace(`/dashboard/subKategori/edit/${id}`)\r\n    }\r\n\r\n    const getAllSubKategori = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit\r\n            }\r\n            const result = await getAll(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            console.log(error)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil sub kategori\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit,\r\n                search: searchData\r\n            }\r\n            const result = await search(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil kategori\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const previousHandle = async () => {\r\n        if(pageNumber !== firstPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber - 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil kategori\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const nextHandle = async () => {\r\n        if(pageNumber !== lastPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber + 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil kategori\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const pageHandle = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            setPageNumber(id)\r\n            const payload = {\r\n                limit,\r\n                search: searchData,\r\n                number: id\r\n            }\r\n            const result = await page(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil kategori\",\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllSubKategori()\r\n    },[limit, reload])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"w-full overflow-x-auto\">\r\n                {\r\n                    loading ?\r\n                    <div className=\"w-full flex items-center justify-center\">\r\n                        <SpinnerLoading />\r\n                    </div> \r\n                    :\r\n                    <div>\r\n                        <div className=\"flex flex-col gap-6 lg:flex lg:flex-row  lg:justify-between mb-6\">\r\n                            <SelectRow value={limit} setValue={setLimit} id={\"limit\"} />\r\n                            <SearchForm value={searchData} setValue={setSearchData} action={handleSearch} />\r\n                        </div>\r\n                        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px-6 py-3\">\r\n                                        Nama\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3\">\r\n                                       Kategori\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3\">\r\n                                        Aksi\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    data && data.map((item, index) =>\r\n                                        <tr key={index} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                                            <th scope=\"row\" className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                                                {item.name}\r\n                                            </th>\r\n                                            <td className=\"px-6 py-4\">\r\n                                                {item.kategori}\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4\">\r\n                                                <div className=\"flex gap-3\">\r\n                                                    {\r\n                                                        aksesEdit === 1 &&\r\n                                                        <FaRegPenToSquare className=\"text-yellow-500 text-xl\" onClick={() => handleEdit(item.id)} />\r\n                                                    }\r\n                                                    {\r\n                                                        aksesDelete === 1 &&\r\n                                                        <FaRegTrashCan className=\"text-red-500 text-xl\" onClick={() => handleDelete(item.id, item.name)} />\r\n                                                    }\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination \r\n                            first={firstPage} \r\n                            last={lastPage} \r\n                            pageNumber={pageNumber} \r\n                            pageHandle={pageHandle} \r\n                            previousHandle={previousHandle} \r\n                            nextHandle={nextHandle}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\tableUser.js",["425"],[],"'use client'\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaRegTrashCan, FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport SearchForm from \"@/components/searchForm\"\r\nimport { getAllUser, deleteUser, search, page } from \"@/app/api/user\";\r\nimport {SelectRow} from \"@/components/selectRow\"; \r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport SpinnerLoading from \"./spinner\";\r\nimport Pagination from \"@/components/pagination\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nexport default function TableUser({aksesEdit = 0, aksesDelete = 0}) {\r\n    const router = useRouter();\r\n    const MySwal = withReactContent(Swal)\r\n    const [data, setData] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [searchData, setSearchData] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalData, setTotalData] = useState(0)\r\n    const [firstPage, setFirstPage] = useState(1)\r\n    const [lastPage, setLastPage] = useState(1)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const handleDelete = (id, username) => {\r\n        MySwal.fire({\r\n            title: `Apakah anda yakin ingin menghapus data ini dengan nama username \"${id, username}\" ?`,\r\n            text: \"Anda tidak bisa mengembalikan data ini!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteUser(id)\r\n                .then(() => {\r\n                  setReload(!reload)\r\n                  MySwal.fire(\r\n                      'Deleted!',\r\n                      'Data berhasil di hapus',\r\n                      'success'\r\n                  )\r\n              }, err => {\r\n                  setReload(!reload)\r\n                  MySwal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Gagal Menghapus user\",\r\n                  });\r\n              })\r\n            }\r\n        }) \r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        router.replace(`/dashboard/user/edit/${id}`)\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit\r\n            }\r\n            const result = await getAllUser(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const payload = {\r\n                limit,\r\n                search: searchData\r\n            }\r\n            const result = await search(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setFirstPage(result.from)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const previousHandle = async () => {\r\n        if(pageNumber !== firstPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber - 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil data user\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const nextHandle = async () => {\r\n        if(pageNumber !== lastPage) {\r\n            try {\r\n                setLoading(true)\r\n                let number = pageNumber + 1\r\n                setPageNumber(number)\r\n                const payload = {\r\n                    limit,\r\n                    search: searchData,\r\n                    number\r\n                }\r\n                const result = await page(payload)\r\n                if(result.data.length) {\r\n                    setData([...result.data])\r\n                    setTotalData(result.total)\r\n                    setLastPage(result.last_page)\r\n                }\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                MySwal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal mengambil data user\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const pageHandle = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            setPageNumber(id)\r\n            const payload = {\r\n                limit,\r\n                search: searchData,\r\n                number: id\r\n            }\r\n            const result = await page(payload)\r\n            if(result.data.length) {\r\n                setData([...result.data])\r\n                setTotalData(result.total)\r\n                setLastPage(result.last_page)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            MySwal.fire({\r\n                icon: \"error\",\r\n                title: \"Gagal mengambil data user\",\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    },[limit, reload])\r\n return (\r\n    <>   \r\n        <div className=\"w-full overflow-x-auto\">\r\n            {\r\n                loading ?\r\n                <div className=\"w-full flex items-center justify-center\">\r\n                    <SpinnerLoading />\r\n                </div> \r\n                :\r\n                <div>\r\n                    <div className=\"flex flex-col gap-6 lg:flex lg:flex-row  lg:justify-between mb-6\">\r\n                        <SelectRow value={limit} setValue={setLimit} id={\"limit\"} />\r\n                        <SearchForm value={searchData} setValue={setSearchData} action={handleSearch} />\r\n                    </div>\r\n                    <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Name\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Username\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Role User\r\n                                </th>\r\n                                <th scope=\"col\" className=\"px-6 py-3\">\r\n                                    Aksi\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                data && data.map((item, index) =>\r\n                                    <tr key={index} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                                        <th scope=\"row\" className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                                            {item.name}\r\n                                        </th>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.username}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {item.name_role}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            <div className=\"flex gap-3\">\r\n                                                {\r\n                                                    aksesEdit === 1 &&\r\n                                                    <FaRegPenToSquare className=\"text-yellow-500 text-xl\" onClick={() => handleEdit(item.id)} />\r\n                                                }\r\n                                                {\r\n                                                    aksesDelete === 1 &&\r\n                                                    <FaRegTrashCan className=\"text-red-500 text-xl\" onClick={() => handleDelete(item.id, item.username)} />\r\n                                                }\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination \r\n                        first={firstPage} \r\n                        last={lastPage} \r\n                        pageNumber={pageNumber} \r\n                        pageHandle={pageHandle} \r\n                        previousHandle={previousHandle} \r\n                        nextHandle={nextHandle}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    </>\r\n )\r\n}","C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\titlePage.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\components\\togle.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\layout.js",[],[],"C:\\Users\\Takin\\Documents\\Github\\submc-website\\client\\app\\page.js",["426"],[],"'use client'\r\nimport Image from 'next/image'\r\nimport Head from 'next/head'\r\n// import type { NextPage } from 'next'\r\nimport Login from './login/page'\r\nimport { useEffect } from 'react'\r\nimport SpinnerLoading from '@/components/spinner'\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  \r\n  useEffect(() => {\r\n    if(localStorage.getItem('token')) {\r\n      router.replace(\"/dashboard\")\r\n    } else {\r\n      router.replace(\"/login\")\r\n    }\r\n  },[])\r\n  return (\r\n    <div className='w-screen h-screen flex items-center justify-center'>\r\n      <SpinnerLoading />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n",{"ruleId":"427","severity":1,"message":"428","line":28,"column":1,"nodeType":"429","endLine":30,"endColumn":2},{"ruleId":"430","severity":1,"message":"431","line":146,"column":7,"nodeType":"432","endLine":146,"endColumn":15,"suggestions":"433"},{"ruleId":"430","severity":1,"message":"434","line":90,"column":8,"nodeType":"432","endLine":90,"endColumn":10,"suggestions":"435"},{"ruleId":"436","severity":1,"message":"437","line":382,"column":49,"nodeType":"438","endLine":382,"endColumn":202},{"ruleId":"430","severity":1,"message":"434","line":99,"column":7,"nodeType":"432","endLine":99,"endColumn":9,"suggestions":"439"},{"ruleId":"436","severity":1,"message":"437","line":113,"column":29,"nodeType":"438","endLine":113,"endColumn":69},{"ruleId":"440","severity":1,"message":"441","line":113,"column":29,"nodeType":"438","endLine":113,"endColumn":69},{"ruleId":"430","severity":1,"message":"434","line":115,"column":7,"nodeType":"432","endLine":115,"endColumn":9,"suggestions":"442"},{"ruleId":"430","severity":1,"message":"434","line":242,"column":7,"nodeType":"432","endLine":242,"endColumn":9,"suggestions":"443"},{"ruleId":"430","severity":1,"message":"434","line":100,"column":8,"nodeType":"432","endLine":100,"endColumn":10,"suggestions":"444"},{"ruleId":"430","severity":1,"message":"434","line":151,"column":7,"nodeType":"432","endLine":151,"endColumn":9,"suggestions":"445"},{"ruleId":"430","severity":1,"message":"446","line":30,"column":9,"nodeType":"432","endLine":30,"endColumn":11,"suggestions":"447"},{"ruleId":"436","severity":1,"message":"437","line":19,"column":21,"nodeType":"438","endLine":23,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":33,"column":15,"nodeType":"438","endLine":36,"endColumn":17},{"ruleId":"436","severity":1,"message":"437","line":39,"column":13,"nodeType":"438","endLine":42,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":43,"column":13,"nodeType":"438","endLine":46,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":47,"column":13,"nodeType":"438","endLine":50,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":51,"column":13,"nodeType":"438","endLine":54,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":12,"column":33,"nodeType":"438","endLine":12,"endColumn":166},{"ruleId":"436","severity":1,"message":"437","line":47,"column":25,"nodeType":"438","endLine":50,"endColumn":27},{"ruleId":"436","severity":1,"message":"437","line":56,"column":37,"nodeType":"438","endLine":56,"endColumn":188},{"ruleId":"430","severity":1,"message":"448","line":104,"column":7,"nodeType":"432","endLine":104,"endColumn":9,"suggestions":"449"},{"ruleId":"430","severity":1,"message":"450","line":296,"column":8,"nodeType":"432","endLine":296,"endColumn":20,"suggestions":"451"},{"ruleId":"436","severity":1,"message":"437","line":442,"column":49,"nodeType":"438","endLine":442,"endColumn":207},{"ruleId":"436","severity":1,"message":"437","line":12,"column":25,"nodeType":"438","endLine":12,"endColumn":86},{"ruleId":"430","severity":1,"message":"452","line":42,"column":8,"nodeType":"432","endLine":42,"endColumn":10,"suggestions":"453"},{"ruleId":"430","severity":1,"message":"454","line":53,"column":7,"nodeType":"432","endLine":53,"endColumn":9,"suggestions":"455"},{"ruleId":"430","severity":1,"message":"454","line":53,"column":7,"nodeType":"432","endLine":53,"endColumn":9,"suggestions":"456"},{"ruleId":"430","severity":1,"message":"454","line":52,"column":7,"nodeType":"432","endLine":52,"endColumn":9,"suggestions":"457"},{"ruleId":"430","severity":1,"message":"458","line":191,"column":7,"nodeType":"432","endLine":191,"endColumn":22,"suggestions":"459"},{"ruleId":"430","severity":1,"message":"460","line":211,"column":7,"nodeType":"432","endLine":211,"endColumn":22,"suggestions":"461"},{"ruleId":"430","severity":1,"message":"462","line":161,"column":7,"nodeType":"432","endLine":161,"endColumn":22,"suggestions":"463"},{"ruleId":"430","severity":1,"message":"464","line":192,"column":7,"nodeType":"432","endLine":192,"endColumn":22,"suggestions":"465"},{"ruleId":"430","severity":1,"message":"466","line":192,"column":7,"nodeType":"432","endLine":192,"endColumn":22,"suggestions":"467"},{"ruleId":"430","severity":1,"message":"446","line":19,"column":5,"nodeType":"432","endLine":19,"endColumn":7,"suggestions":"468"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGetBanner'. Either include it or remove the dependency array.","ArrayExpression",["469"],"React Hook useEffect has a missing dependency: 'getAksesMenu'. Either include it or remove the dependency array.",["470"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement",["471"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["472"],["473"],["474"],["475"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["476"],"React Hook useEffect has missing dependencies: 'getProduk' and 'images'. Either include them or remove the dependency array. If 'setEndSale' needs the current value of 'getProduk', you can also switch to useReducer instead of useState and read 'getProduk' in the reducer.",["477"],"React Hook useEffect has a missing dependency: 'handleGetSize'. Either include it or remove the dependency array.",["478"],"React Hook useEffect has a missing dependency: 'fetchMenu'. Either include it or remove the dependency array.",["479"],"React Hook useEffect has a missing dependency: 'loadOption'. Either include it or remove the dependency array.",["480"],["481"],["482"],"React Hook useEffect has a missing dependency: 'getAllKategori'. Either include it or remove the dependency array.",["483"],"React Hook useEffect has a missing dependency: 'getProduks'. Either include it or remove the dependency array.",["484"],"React Hook useEffect has a missing dependency: 'handleGetRoleUser'. Either include it or remove the dependency array.",["485"],"React Hook useEffect has a missing dependency: 'getAllSubKategori'. Either include it or remove the dependency array.",["486"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["487"],["488"],{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"491","fix":"493"},{"desc":"491","fix":"494"},{"desc":"491","fix":"495"},{"desc":"491","fix":"496"},{"desc":"491","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"506","fix":"508"},{"desc":"506","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"498","fix":"520"},"Update the dependencies array to be: [handleGetBanner, reload]",{"range":"521","text":"522"},"Update the dependencies array to be: [getAksesMenu]",{"range":"523","text":"524"},{"range":"525","text":"524"},{"range":"526","text":"524"},{"range":"527","text":"524"},{"range":"528","text":"524"},{"range":"529","text":"524"},"Update the dependencies array to be: [router]",{"range":"530","text":"531"},"Update the dependencies array to be: [getProduk, images]",{"range":"532","text":"533"},"Update the dependencies array to be: [handleGetSize, reloadSize]",{"range":"534","text":"535"},"Update the dependencies array to be: [fetchMenu]",{"range":"536","text":"537"},"Update the dependencies array to be: [loadOption]",{"range":"538","text":"539"},{"range":"540","text":"539"},{"range":"541","text":"539"},"Update the dependencies array to be: [getAllKategori, limit, reload]",{"range":"542","text":"543"},"Update the dependencies array to be: [getProduks, limit, reload]",{"range":"544","text":"545"},"Update the dependencies array to be: [handleGetRoleUser, limit, reload]",{"range":"546","text":"547"},"Update the dependencies array to be: [getAllSubKategori, limit, reload]",{"range":"548","text":"549"},"Update the dependencies array to be: [getUsers, limit, reload]",{"range":"550","text":"551"},{"range":"552","text":"531"},[4784,4792],"[handleGetBanner, reload]",[3233,3235],"[getAksesMenu]",[4412,4414],[4825,4827],[11480,11482],[3986,3988],[6224,6226],[1024,1026],"[router]",[5233,5235],"[getProduk, images]",[12279,12291],"[handleGetSize, reloadSize]",[1181,1183],"[fetchMenu]",[1565,1567],"[loadOption]",[1555,1557],[1614,1616],[6243,6258],"[getAllKategori, limit, reload]",[7222,7237],"[getProduks, limit, reload]",[5227,5242],"[handleGetRoleUser, limit, reload]",[6294,6309],"[getAllSubKategori, limit, reload]",[6253,6268],"[getUsers, limit, reload]",[496,498]]